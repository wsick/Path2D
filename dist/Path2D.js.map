{"version":3,"sources":["Path2DEx.ts","Path2D_parse.ts","parser.ts"],"names":["Path2DEx","Path2DEx.constructor","Path2DEx.addPath","Path2DEx.closePath","Path2DEx.moveTo","Path2DEx.lineTo","Path2DEx.bezierCurveTo","Path2DEx.quadraticCurveTo","Path2DEx.arc","Path2DEx.arcTo","Path2DEx.ellipse","Path2DEx.rect","Path2DEx.parse","doParse"],"mappings":"AAAA;IAIIA,kBAAYA,IAAoBA;QAC5BC,EAAEA,CAACA,CAACA,IAAIA,YAAiBA,MAAMA,CAACA,CAACA,CAACA;QAElCA,CAACA;QAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,OAAOA,IAAIA,KAAKA,QAAQA,CAACA,CAACA,CAACA;YAClCA,QAAQA,CAACA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;QACpCA,CAACA;QAACA,IAAIA,CAACA,CAACA;QAERA,CAACA;IACLA,CAACA;IAEDD,0BAAOA,GAAPA,UAAQA,IAAYA,EAAEA,SAAqBA;IAE3CE,CAACA;IAEDF,4BAASA,GAATA;IAEAG,CAACA;IAEDH,yBAAMA,GAANA,UAAOA,CAASA,EAAEA,CAASA;IAE3BI,CAACA;IAEDJ,yBAAMA,GAANA,UAAOA,CAASA,EAAEA,CAASA;IAE3BK,CAACA;IAEDL,gCAAaA,GAAbA,UAAcA,IAAYA,EAAEA,IAAYA,EAAEA,IAAYA,EAAEA,IAAYA,EAAEA,CAASA,EAAEA,CAASA;IAE1FM,CAACA;IAEDN,mCAAgBA,GAAhBA,UAAiBA,GAAWA,EAAEA,GAAWA,EAAEA,CAASA,EAAEA,CAASA;IAE/DO,CAACA;IAEDP,sBAAGA,GAAHA,UAAIA,CAASA,EAAEA,CAASA,EAAEA,MAAcA,EAAEA,UAAkBA,EAAEA,QAAgBA,EAAEA,aAAuBA;IAEvGQ,CAACA;IAEDR,wBAAKA,GAALA,UAAMA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,MAAcA;IAEpES,CAACA;IAEDT,0BAAOA,GAAPA,UAAQA,CAASA,EAAEA,CAASA,EAAEA,OAAeA,EAAEA,OAAeA,EAAEA,QAAgBA,EAAEA,UAAkBA,EAAEA,QAAgBA,EAAEA,aAAuBA;IAE/IU,CAACA;IAEDV,uBAAIA,GAAJA,UAAKA,CAASA,EAAEA,CAASA,EAAEA,KAAaA,EAAEA,MAAcA;IAExDW,CAACA;IAEMX,cAAKA,GAAZA,UAAaA,CAASA;QAClBY,MAAMA,IAAIA,KAAKA,CAACA,iBAAiBA,CAACA,CAACA;IACvCA,CAACA;IACLZ,eAACA;AAADA,CAzDA,AAyDCA,IAAA;ACzDD,iCAAiC;AAEjC,CAAC,UAAU,MAAW;IAClB,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;IAChD,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC;IACpC,CAAC;AACL,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;ACRT,iCAAiC;AAEjC,CAAC,UAAU,EAAmB;IAA7B,iBAeA;IAdG,EAAE,CAAC,KAAK,GAAG,UAAC,CAAS;QACjB,IAAI,QAAgB,CAAC;QACrB,EAAE,CAAC,CAAC,KAAI,YAAY,MAAM,CAAC,CAAC,CAAC;YACzB,QAAQ,GAAG,KAAI,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,QAAQ,GAAG,IAAI,EAAE,EAAE,CAAC;QACxB,CAAC;QACD,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACrB,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC;IAEF,iBAAiB,IAAY,EAAE,CAAS;IAExCa,CAACA;AACL,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC","file":"Path2D.js","sourcesContent":["class Path2DEx implements Path2D {\r\n    constructor();\r\n    constructor(path: Path2D);\r\n    constructor(d: string);\r\n    constructor(arg0?: string|Path2D) {\r\n        if (arg0 instanceof <any>Path2D) {\r\n            //TODO: copyTo(<any>arg0, this);\r\n        } else if (typeof arg0 === \"string\") {\r\n            Path2DEx.parse.call(this, arg0);\r\n        } else {\r\n            //TODO: Initialize\r\n        }\r\n    }\r\n\r\n    addPath(path: Path2D, transform?: SVGMatrix) {\r\n\r\n    }\r\n\r\n    closePath() {\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n\r\n    }\r\n\r\n    lineTo(x: number, y: number) {\r\n\r\n    }\r\n\r\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number) {\r\n\r\n    }\r\n\r\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number) {\r\n\r\n    }\r\n\r\n    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean) {\r\n\r\n    }\r\n\r\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number) {\r\n\r\n    }\r\n\r\n    ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean) {\r\n\r\n    }\r\n\r\n    rect(x: number, y: number, width: number, height: number) {\r\n\r\n    }\r\n\r\n    static parse(d: string): Path2D {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n}","/// <reference path=\"Path2DEx\" />\r\n\r\n(function (global: any) {\r\n    if (typeof Path2D === \"function\") {\r\n        global.Path2D.parse = global.Path2DEx.parse;\r\n    } else {\r\n        global.Path2D = global.Path2DEx;\r\n    }\r\n})(this);","/// <reference path=\"Path2DEx\" />\r\n\r\n(function (ex: typeof Path2DEx) {\r\n    ex.parse = (d: string): Path2D => {\r\n        var existing: Path2D;\r\n        if (this instanceof Path2D) {\r\n            existing = this;\r\n        } else {\r\n            existing = new ex();\r\n        }\r\n        doParse(existing, d);\r\n        return existing;\r\n    };\r\n\r\n    function doParse(path: Path2D, d: string) {\r\n        //TODO: Implement\r\n    }\r\n})(Path2DEx);"],"sourceRoot":"/source/"}