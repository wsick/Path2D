{"version":3,"sources":["_version.ts","polyfills/CanvasRenderingContext2D_ellipse.ts","Path2DEx.ts","Path2D_parse.ts","parser.ts"],"names":["path2d","path2d.IPathOpType","path2d.Path2DEx","path2d.Path2DEx.constructor","path2d.Path2DEx.addPath","path2d.Path2DEx.closePath","path2d.Path2DEx.moveTo","path2d.Path2DEx.lineTo","path2d.Path2DEx.bezierCurveTo","path2d.Path2DEx.quadraticCurveTo","path2d.Path2DEx.arc","path2d.Path2DEx.arcTo","path2d.Path2DEx.ellipse","path2d.Path2DEx.rect","path2d.Path2DEx.parse","path2d.doParse"],"mappings":"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","file":"path2d.js","sourcesContent":["namespace path2d {\r\n    export var version = '0.1.0';\r\n}",null,"namespace path2d {\r\n    export interface IPathOp {\r\n        type: IPathOpType;\r\n    }\r\n    export enum IPathOpType {\r\n        closePath,\r\n        moveTo,\r\n        lineTo,\r\n        bezierCurveTo,\r\n        quadraticCurveTo,\r\n        arc,\r\n        arcTo,\r\n        ellipse,\r\n        rect,\r\n    }\r\n\r\n    export class Path2DEx implements Path2D {\r\n        private $ops: IPathOp[];\r\n\r\n        constructor ();\r\n        constructor (path: Path2D);\r\n        constructor (d: string);\r\n        constructor (arg0?: string|Path2D) {\r\n            if (arg0 instanceof <any>Path2D) {\r\n                this.$ops = JSON.parse(JSON.stringify(this.$ops));\r\n            } else if (typeof arg0 === \"string\") {\r\n                this.$ops = [];\r\n                Path2DEx.parse.call(this, arg0);\r\n            } else {\r\n                this.$ops = [];\r\n            }\r\n        }\r\n\r\n        addPath (path: Path2D, transform?: SVGMatrix) {\r\n\r\n        }\r\n\r\n        closePath () {\r\n            this.$ops.push({\r\n                type: IPathOpType.closePath,\r\n                args: Array.prototype.slice.call(arguments, 0)\r\n            });\r\n        }\r\n\r\n        moveTo (x: number, y: number) {\r\n            this.$ops.push({\r\n                type: IPathOpType.moveTo,\r\n                args: Array.prototype.slice.call(arguments, 0)\r\n            });\r\n        }\r\n\r\n        lineTo (x: number, y: number) {\r\n            this.$ops.push({\r\n                type: IPathOpType.lineTo,\r\n                args: Array.prototype.slice.call(arguments, 0)\r\n            });\r\n        }\r\n\r\n        bezierCurveTo (cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number) {\r\n            this.$ops.push({\r\n                type: IPathOpType.bezierCurveTo,\r\n                args: Array.prototype.slice.call(arguments, 0)\r\n            });\r\n        }\r\n\r\n        quadraticCurveTo (cpx: number, cpy: number, x: number, y: number) {\r\n            this.$ops.push({\r\n                type: IPathOpType.quadraticCurveTo,\r\n                args: Array.prototype.slice.call(arguments, 0)\r\n            });\r\n        }\r\n\r\n        arc (x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean) {\r\n            this.$ops.push({\r\n                type: IPathOpType.arc,\r\n                args: Array.prototype.slice.call(arguments, 0)\r\n            });\r\n        }\r\n\r\n        arcTo (x1: number, y1: number, x2: number, y2: number, radius: number) {\r\n            this.$ops.push({\r\n                type: IPathOpType.arcTo,\r\n                args: Array.prototype.slice.call(arguments, 0)\r\n            });\r\n        }\r\n\r\n        ellipse (x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean) {\r\n            this.$ops.push({\r\n                type: IPathOpType.ellipse,\r\n                args: Array.prototype.slice.call(arguments, 0)\r\n            });\r\n        }\r\n\r\n        rect (x: number, y: number, width: number, height: number) {\r\n            this.$ops.push({\r\n                type: IPathOpType.rect,\r\n                args: Array.prototype.slice.call(arguments, 0)\r\n            });\r\n        }\r\n\r\n        static parse (d: string): Path2D {\r\n            throw new Error(\"Not implemented\");\r\n        }\r\n    }\r\n}","/// <reference path=\"Path2DEx\" />\r\n\r\n(function (global: any) {\r\n    if (typeof Path2D === \"function\") {\r\n        global.Path2D.parse = global.Path2DEx.parse;\r\n    } else {\r\n        global.Path2D = global.Path2DEx;\r\n    }\r\n})(this);","/// <reference path=\"Path2DEx\" />\r\n\r\nnamespace path2d {\r\n    Path2DEx.parse = function (d: string): Path2D {\r\n        var existing: Path2D;\r\n        if (this instanceof Path2D) {\r\n            existing = this;\r\n        } else {\r\n            existing = new Path2DEx();\r\n        }\r\n        doParse(existing, d);\r\n        return existing;\r\n    };\r\n\r\n    function doParse (path: Path2D, d: string) {\r\n        //TODO: Implement\r\n    }\r\n}"],"sourceRoot":"/source/"}