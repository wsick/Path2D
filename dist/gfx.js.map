{"version":3,"sources":["_version.ts","polyfills/CanvasRenderingContext2D_drawPath.ts","polyfills/CanvasRenderingContext2D_ellipse.ts","polyfills/CanvasRenderingContext2D_exts.ts","polyfills/TextEncoder.ts","ellipticalArc/generate.ts","parse/IParser.ts","parse/ParseTypes.ts","segments/arc.ts","segments/lineTo.ts","segments/ArcTo.ts","segments/bezierCurveTo.ts","segments/ClosePath.ts","segments/Ellipse.ts","segments/moveTo.ts","segments/quadraticCurveTo.ts","segments/Rect.ts","segments/segments.ts","parse/buffer/parser.ts","parse/matching/parser.ts","Enums.ts","Path.ts"],"names":["gfx","TextEncoder","encode","gfx.ellipticalArc","gfx.ellipticalArc.generate","gfx.parse","gfx.parse.getParser","gfx.parse.ParseStyles","gfx.segments","gfx.segments.Arc","gfx.segments.Arc.constructor","gfx.segments.Arc.draw","gfx.segments.Arc.init","gfx.segments.Arc.extendFillBox","gfx.segments.Arc.extendStrokeBox","gfx.segments.Arc.getStartVector","gfx.segments.Arc.getEndVector","gfx.segments.arcContainsPoint","gfx.segments.getCapSpread","gfx.segments.normalizeVector","gfx.segments.perpendicularVector","gfx.segments.LineTo","gfx.segments.LineTo.constructor","gfx.segments.LineTo.draw","gfx.segments.LineTo.extendFillBox","gfx.segments.LineTo.extendStrokeBox","gfx.segments.LineTo.getStartVector","gfx.segments.LineTo.getEndVector","gfx.segments.ArcTo","gfx.segments.ArcTo.constructor","gfx.segments.ArcTo.draw","gfx.segments.ArcTo.init","gfx.segments.ArcTo.extendFillBox","gfx.segments.ArcTo.extendStrokeBox","gfx.segments.ArcTo.getStartVector","gfx.segments.ArcTo.getEndVector","gfx.segments.createArc","gfx.segments.getTangentPoint","gfx.segments.getPerpendicularIntersections","gfx.segments.BezierCurveTo","gfx.segments.BezierCurveTo.constructor","gfx.segments.BezierCurveTo.draw","gfx.segments.BezierCurveTo.extendFillBox","gfx.segments.BezierCurveTo.extendStrokeBox","gfx.segments.BezierCurveTo.getStartVector","gfx.segments.BezierCurveTo.getEndVector","gfx.segments.getMaxima","gfx.segments.cod","gfx.segments.ClosePath","gfx.segments.ClosePath.constructor","gfx.segments.ClosePath.draw","gfx.segments.ClosePath.extendFillBox","gfx.segments.ClosePath.extendStrokeBox","gfx.segments.ClosePath.getStartVector","gfx.segments.ClosePath.getEndVector","gfx.segments.Ellipse","gfx.segments.Ellipse.constructor","gfx.segments.Ellipse.draw","gfx.segments.Ellipse.extendFillBox","gfx.segments.Ellipse.extendStrokeBox","gfx.segments.Ellipse.getStartVector","gfx.segments.Ellipse.getEndVector","gfx.segments.MoveTo","gfx.segments.MoveTo.constructor","gfx.segments.MoveTo.draw","gfx.segments.MoveTo.extendFillBox","gfx.segments.MoveTo.extendStrokeBox","gfx.segments.MoveTo.getStartVector","gfx.segments.MoveTo.getEndVector","gfx.segments.QuadraticCurveTo","gfx.segments.QuadraticCurveTo.constructor","gfx.segments.QuadraticCurveTo.draw","gfx.segments.QuadraticCurveTo.extendFillBox","gfx.segments.QuadraticCurveTo.extendStrokeBox","gfx.segments.QuadraticCurveTo.getStartVector","gfx.segments.QuadraticCurveTo.getEndVector","gfx.segments.Rect","gfx.segments.Rect.constructor","gfx.segments.Rect.draw","gfx.segments.Rect.extendFillBox","gfx.segments.Rect.extendStrokeBox","gfx.segments.Rect.getStartVector","gfx.segments.Rect.getEndVector","gfx.parse.buffer","gfx.parse.buffer.Parser","gfx.parse.buffer.Parser.constructor","gfx.parse.buffer.Parser.parse","gfx.parse.buffer.parseNumber","gfx.parse.buffer.toBuffer","gfx.parse.buffer.isNaN","gfx.parse.buffer.isInfinity","gfx.parse.buffer.parseInteger","gfx.parse.buffer.parseMantissa","gfx.parse.buffer.parseSignificand","gfx.parse.buffer.getSlice","gfx.parse.matching","gfx.parse.matching.Parser","gfx.parse.matching.Parser.constructor","gfx.parse.matching.Parser.parse","gfx.parse.matching.parse","gfx.parse.matching.parse.go","gfx.parse.matching.parse.parsePoint","gfx.parse.matching.parse.parseDouble","gfx.parse.matching.parse.advance","gfx.parse.matching.parse.match","gfx.parse.matching.parse.morePointsAvailable","gfx.FillRule","gfx.SweepDirection","gfx.PenLineCap","gfx.PenLineJoin","gfx.PathOpType","gfx.Path","gfx.Path.constructor","gfx.Path.addPath","gfx.Path.closePath","gfx.Path.moveTo","gfx.Path.lineTo","gfx.Path.bezierCurveTo","gfx.Path.quadraticCurveTo","gfx.Path.arc","gfx.Path.arcTo","gfx.Path.ellipse","gfx.Path.rect","gfx.Path.draw","gfx.Path.parse"],"mappings":"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xBA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAExBA,IAAIA,CAACA,GAAGA,SAASA,CAACA,EAAEA,EAAEA,IAAIA,EAAEA,IAAIA,EAAEA,CAACA,EAAEA,EAAEA,EAAEA,IAAIA,EAAEA,IAAIA,EAAEA,CAACA,CAACA,CAACA;gBACxDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;oBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;oBAChCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACpCA,CAACA;gBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;oBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;oBAChCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACpCA,CAACA;gBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;oBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;oBAChCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACpCA,CAACA;gBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;oBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;oBAChCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACpCA,CAACA;gBAEDA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YAC/BA,CAACA;YAEDH,uCAAeA,GAAfA,UAAgBA,GAAiBA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA,EAAEA,IAAuBA;gBAC3FI,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAC3BA,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAC3BA,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAC3BA,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAC3BA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACxBA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACxBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,eAAeA,GAAGA,GAAGA,CAACA;gBAEpCA,IAAIA,CAACA,GAAGA,SAASA,CAACA,EAAEA,EAAEA,IAAIA,EAAEA,IAAIA,EAAEA,CAACA,EAAEA,EAAEA,EAAEA,IAAIA,EAAEA,IAAIA,EAAEA,CAACA,CAACA,CAACA;gBACxDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;oBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;gBACzCA,CAACA;gBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;oBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;gBACzCA,CAACA;gBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;oBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;gBACzCA,CAACA;gBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;oBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;gBACzCA,CAACA;gBAEDA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YAC/BA,CAACA;YAEDJ,sCAAcA,GAAdA,UAAeA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA;gBAC9CK,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAC3BA,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAE3BA,MAAMA,CAACA;oBACHA,CAACA,GAAGA,CAACA,IAAIA,GAAGA,EAAEA,CAACA;oBACfA,CAACA,GAAGA,CAACA,IAAIA,GAAGA,EAAEA,CAACA;iBAClBA,CAACA;YACNA,CAACA;YAEDL,oCAAYA,GAAZA,UAAaA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA;gBAC5CM,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAC3BA,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAC3BA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACxBA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAExBA,MAAMA,CAACA;oBACHA,CAACA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA;oBACdA,CAACA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA;iBACjBA,CAACA;YACNA,CAACA;YACLN,oBAACA;QAADA,CAjGA/B,AAiGC+B,IAAA/B;QAjGYA,sBAAaA,gBAiGzBA,CAAAA;QAqBDA,mBAAmBA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA;YAC7GsC,MAAMA,CAACA;gBACHA,CAACA,EAAEA,GAAGA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,CAACA;gBACtBA,CAACA,EAAEA,GAAGA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,CAACA;aACzBA,CAACA;QACNA,CAACA;QAEDtC,aAAaA,CAASA,EAAEA,CAASA,EAAEA,CAASA,EAAEA,CAASA;YACnDuC,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA;YAC9BA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA;YACdA,IAAIA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA;YAC/BA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA;YAEtCA,IAAIA,IAAIA,GAAaA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;YAClCA,EAAEA,CAACA,CAACA,KAAKA,CAACA,EAAEA,CAACA,CAACA;gBACVA,MAAMA,CAACA,IAAIA,CAACA;YAEhBA,IAAIA,CAASA,EACTA,EAAUA,CAACA;YAEfA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;YACxBA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACnBA,EAAEA,GAAGA,CAACA,GAAGA,CAACA,CAACA;gBACXA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,GAAGA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA;YAClGA,CAACA;YAEDA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;YACxBA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACnBA,EAAEA,GAAGA,CAACA,GAAGA,CAACA,CAACA;gBACXA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAG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AAIA,CAACA,GAAGA,SAASA,CAACA,EAAEA,EAAEA,GAAGA,EAAEA,CAACA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,CAACA,CAACA,CAACA;gBAC1CA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACNA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBAClCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;gBACtCA,CAACA;gBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACNA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBAClCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;gBACtCA,CAACA;gBAEDA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YAC/BA,CAACA;YAEDJ,yCAAcA,GAAdA,UAAeA,EAAUA,EAAEA,EAAUA,EAAEA,IAA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IAAIA,IAAIA,CAACA;oCACZA,KAAKA,CAACA;gCACVA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;oCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;gCAClBA,CAACA;gCACDA,IAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;gCAC1BA,KAAKA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACvBA,KAAKA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACvBA,OAAOA,EAAEA,CAACA;gCACVA,OAAOA,mBAAmBA,EAAEA,EAAEA,CAACA;oCAC3BA,EAAEA,CAACA,CAACA,CAACA,GAAGA,GAAGA,UAAUA,EAAEA,CAACA,IAAIA,IAAIA,CAACA;wCAC7BA,KAAKA,CAACA;oCACVA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;wCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCAClBA,CAACA;oCACDA,IAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;gCAC9BA,CAACA;gCACDA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACbA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACbA,GAAGA,GAAGA,GAAGA,GAAGA,KAAKA,CAACA;gCAClBA,KAAKA,CAACA;4BACVA,KAAKA,GAAGA;gCACJA,QAAQA,GAAGA,IAAIA,CAACA;4BACpBA,KAAKA,GAAGA;gCACJA,OAAOA,mBAAmBA,EAAEA,EAAEA,CAACA;oCAC3BA,EAAEA,CAACA,CAACA,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A;wCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;wCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCAClBA,CAACA;oCACDA,OAAOA,EAAEA,CAACA;oCAEVA,IAAIA,CAACA,aAAaA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oCAE7DA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;oCACdA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCAClBA,CAACA;gCACDA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACbA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACbA,GAAGA,GAAGA,IAAIA,CAACA;gCACXA,IAAIA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACfA,IAAIA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACfA,GAAGA,GAAGA,KAAKA,CAACA;gCACZA,KAAKA,CAACA;4BACVA,KAAKA,GAAGA;gCACJA,QAAQA,GAAGA,IAAIA,CAACA;4BACpBA,KAAKA,GAAGA;gCACJA,OAAOA,mBAAmBA,EAAEA,EAAEA,CAACA;oCAC3BA,EAAEA,CAACA,CAACA,CAACA,GAAGA,GAAGA,UAAUA,EAAEA,CAACA,IAAIA,IAAIA,CAACA;wCAC7BA,KAAKA,CAACA;oCACVA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;wCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCAClBA,CAACA;oCACDA,OAAOA,EAAEA,CAACA;oCACVA,EAAEA,CAACA,CAACA,CAACA,GAAG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","file":"gfx.js","sourcesContent":["namespace gfx {\r\n    export var version = '0.1.0';\r\n}",null,null,null,null,"namespace gfx.ellipticalArc {\n    var NO_DRAW_EPSILON = 0.000002;\n    var ZERO_EPSILON = 0.000019;\n    var SMALL_EPSILON = 0.000117;\n\n    export function generate(path: Path, sx: number, sy: number, rx: number, ry: number, rotationAngle: number, isLargeArcFlag: boolean, sweepDirectionFlag: SweepDirection, ex: number, ey: number) {\n        // from tests it seems that Silverlight closely follows SVG arc\n        // behavior (which is very different from the model used with GDI+)\n        // some helpful stuff is available here:\n        // http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n\n        // get start point from the existing path\n        var sx = sx,\n            sy = sy,\n            ex = ex,\n            ey = ey,\n            rx = rx,\n            ry = ry;\n\n        // if start and end points are identical, then no arc is drawn\n        // FIXME: what's the logic (if any) to compare points\n        // e.g. 60 and 60.000002 are drawn while 80 and 80.000003 aren't\n        if (Math.abs(ex - sx) < NO_DRAW_EPSILON && Math.abs(ey - sy) < NO_DRAW_EPSILON)\n            return;\n\n        // Correction of out-of-range radii, see F6.6 (step 1)\n        if (Math.abs(rx) < ZERO_EPSILON || Math.abs(ry) < ZERO_EPSILON) {\n            // treat this as a straight line (to end point)\n            path.lineTo(ex, ey);\n            return;\n        }\n\n        // Silverlight \"too small to be useful\"\n        if (Math.abs(rx) < SMALL_EPSILON || Math.abs(ry) < SMALL_EPSILON) {\n            // yes it does mean there's a hole between \"normal\" FP values and \"zero\" FP values\n            // and SL doesn't render anything in this twilight sonze\n            return;\n        }\n\n        // Correction of out-of-range radii, see F6.6.1 (step 2)\n        rx = Math.abs(rx);\n        ry = Math.abs(ry);\n\n        // convert angle into radians\n        var angle = rotationAngle * Math.PI / 180.0;\n\n        // variables required for F6.3.1\n        var cos_phi = Math.cos(angle);\n        var sin_phi = Math.sin(angle);\n        var dx2 = (sx - ex) / 2.0;\n        var dy2 = (sy - ey) / 2.0;\n        var x1p = cos_phi * dx2 + sin_phi * dy2;\n        var y1p = cos_phi * dy2 - sin_phi * dx2;\n        var x1p2 = x1p * x1p;\n        var y1p2 = y1p * y1p;\n        var rx2 = rx * rx;\n        var ry2 = ry * ry;\n\n        // Correction of out-of-range radii, see F6.6.2 (step 4)\n        var lambda = (x1p2 / rx2) + (y1p2 / ry2);\n        if (lambda > 1.0) {\n            // see F6.6.3\n            var lambda_root = Math.sqrt(lambda);\n            rx *= lambda_root;\n            ry *= lambda_root;\n            // update rx2 and ry2\n            rx2 = rx * rx;\n            ry2 = ry * ry;\n        }\n\n        var cxp, cyp, cx, cy;\n        var c = (rx2 * ry2) - (rx2 * y1p2) - (ry2 * x1p2);\n\n        var large = isLargeArcFlag === true;\n        var sweep = sweepDirectionFlag === SweepDirection.Clockwise;\n        // check if there is no possible solution (i.e. we can't do a square root of a negative value)\n        if (c < 0.0) {\n            // scale uniformly until we have a single solution (see F6.2) i.e. when c == 0.0\n            var scale = Math.sqrt(1.0 - c / (rx2 * ry2));\n            rx *= scale;\n            ry *= scale;\n            // update rx2 and ry2\n            rx2 = rx * rx;\n            ry2 = ry * ry;\n\n            // step 2 (F6.5.2) - simplified since c == 0.0\n            cxp = 0.0;\n            cyp = 0.0;\n\n            // step 3 (F6.5.3 first part) - simplified since cxp and cyp == 0.0\n            cx = 0.0;\n            cy = 0.0;\n        } else {\n            // complete c calculation\n            c = Math.sqrt(c / ((rx2 * y1p2) + (ry2 * x1p2)));\n\n            // inverse sign if Fa == Fs\n            if (large === sweep)\n                c = -c;\n\n            // step 2 (F6.5.2)\n            cxp = c * ( rx * y1p / ry);\n            cyp = c * (-ry * x1p / rx);\n\n            // step 3 (F6.5.3 first part)\n            cx = cos_phi * cxp - sin_phi * cyp;\n            cy = sin_phi * cxp + cos_phi * cyp;\n        }\n\n        // step 3 (F6.5.3 second part) we now have the center point of the ellipse\n        cx += (sx + ex) / 2.0;\n        cy += (sy + ey) / 2.0;\n\n        // step 4 (F6.5.4)\n        // we dont' use arccos (as per w3c doc), see http://www.euclideanspace.com/maths/algebra/vectors/angleBetween/index.htm\n        // note: atan2 (0.0, 1.0) == 0.0\n        var at = Math.atan2(((y1p - cyp) / ry), ((x1p - cxp) / rx));\n        var theta1 = (at < 0.0) ? 2.0 * Math.PI + at : at;\n\n        var nat = Math.atan2(((-y1p - cyp) / ry), ((-x1p - cxp) / rx));\n        var delta_theta = (nat < at) ? 2.0 * Math.PI - at + nat : nat - at;\n\n        if (sweep) {\n            // ensure delta theta < 0 or else add 360 degrees\n            if (delta_theta < 0.0)\n                delta_theta += 2.0 * Math.PI;\n        } else {\n            // ensure delta theta > 0 or else substract 360 degrees\n            if (delta_theta > 0.0)\n                delta_theta -= 2.0 * Math.PI;\n        }\n\n        // add several cubic bezier to approximate the arc (smaller than 90 degrees)\n        // we add one extra segment because we want something smaller than 90deg (i.e. not 90 itself)\n        var segment_count = Math.floor(Math.abs(delta_theta / (Math.PI / 2))) + 1;\n        var delta = delta_theta / segment_count;\n\n        // http://www.stillhq.com/ctpfaq/2001/comp.text.pdf-faq-2001-04.txt (section 2.13)\n        var bcp = 4.0 / 3 * (1 - Math.cos(delta / 2)) / Math.sin(delta / 2);\n\n        var cos_phi_rx = cos_phi * rx;\n        var cos_phi_ry = cos_phi * ry;\n        var sin_phi_rx = sin_phi * rx;\n        var sin_phi_ry = sin_phi * ry;\n\n        var cos_theta1 = Math.cos(theta1);\n        var sin_theta1 = Math.sin(theta1);\n\n        for (var i = 0; i < segment_count; ++i) {\n            // end angle (for this segment) = current + delta\n            var theta2 = theta1 + delta;\n            var cos_theta2 = Math.cos(theta2);\n            var sin_theta2 = Math.sin(theta2);\n\n            // first control point (based on start point sx,sy)\n            var c1x = sx - bcp * (cos_phi_rx * sin_theta1 + sin_phi_ry * cos_theta1);\n            var c1y = sy + bcp * (cos_phi_ry * cos_theta1 - sin_phi_rx * sin_theta1);\n\n            // end point (for this segment)\n            var cur_ex = cx + (cos_phi_rx * cos_theta2 - sin_phi_ry * sin_theta2);\n            var cur_ey = cy + (sin_phi_rx * cos_theta2 + cos_phi_ry * sin_theta2);\n\n            // second control point (based on end point ex,ey)\n            var c2x = cur_ex + bcp * (cos_phi_rx * sin_theta2 + sin_phi_ry * cos_theta2);\n            var c2y = cur_ey + bcp * (sin_phi_rx * sin_theta2 - cos_phi_ry * cos_theta2);\n\n            path.bezierCurveTo(c1x, c1y, c2x, c2y, cur_ex, cur_ey);\n\n            // next start point is the current end point (same for angle)\n            sx = cur_ex;\n            sy = cur_ey;\n            theta1 = theta2;\n            // avoid recomputations\n            cos_theta1 = cos_theta2;\n            sin_theta1 = sin_theta2;\n        }\n    }\n}","namespace gfx.parse {\n    export interface IParser {\n        parse(path: IPath, data: string|Uint8Array): IPath;\n    }\n\n    export var style = ParseStyles.CharMatching;\n\n    export function getParser(): IParser {\n        if (style === ParseStyles.Buffer)\n            return new buffer.Parser();\n        return new matching.Parser();\n    }\n}","namespace gfx.parse {\n    export enum ParseStyles {\n        CharMatching = 2,\n        Buffer = 1,\n    }\n}","namespace gfx.segments {\n    export interface IArcMetrics {\n        inited: boolean;\n        sx: number;\n        sy: number;\n        ex: number;\n        ey: number;\n        l: number;\n        cl: boolean;\n        r: number;\n        cr: boolean;\n        t: number;\n        ct: boolean;\n        b: number;\n        cb: boolean;\n    }\n\n    export class Arc implements ISegment {\n        draw(ctx: CanvasRenderingContext2D, args: any[]) {\n            var x = args[0];\n            var y = args[1];\n            var radius = args[2];\n            var sa = args[3];\n            var ea = args[4];\n            var cc = args[5];\n            ctx.arc(x, y, radius, sa, ea, cc);\n        }\n\n        init(metrics: IArcMetrics, x: number, y: number, radius: number, sa: number, ea: number, cc: boolean) {\n            if (metrics.inited)\n                return;\n\n            var sx = metrics.sx = x + (radius * Math.cos(sa));\n            var sy = metrics.sy = y + (radius * Math.sin(sa));\n            var ex = metrics.ex = x + (radius * Math.cos(ea));\n            var ey = metrics.ey = y + (radius * Math.sin(ea));\n\n            var l = metrics.l = x - radius;\n            metrics.cl = arcContainsPoint(sx, sy, ex, ey, l, y, cc);\n\n            var r = metrics.r = x + radius;\n            metrics.cr = arcContainsPoint(sx, sy, ex, ey, r, y, cc);\n\n            var t = metrics.t = y - radius;\n            metrics.ct = arcContainsPoint(sx, sy, ex, ey, x, t, cc);\n\n            var b = metrics.b = y + radius;\n            metrics.cb = arcContainsPoint(sx, sy, ex, ey, x, b, cc);\n\n            metrics.inited = true;\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics?: any) {\n            var x = args[0];\n            var y = args[1];\n            var radius = args[2];\n            var sa = args[3];\n            var ea = args[4];\n            var cc = args[5];\n\n            if (ea === sa)\n                return;\n\n            this.init(metrics, x, y, radius, sa, ea, cc);\n\n            box.l = Math.min(box.l, sx, metrics.ex);\n            box.r = Math.max(box.r, sx, metrics.ex);\n            box.t = Math.min(box.t, sy, metrics.ey);\n            box.b = Math.max(box.b, sy, metrics.ey);\n\n            if (metrics.cl)\n                box.l = Math.min(box.l, metrics.l);\n            if (metrics.cr)\n                box.r = Math.max(box.r, metrics.r);\n            if (metrics.ct)\n                box.t = Math.min(box.t, metrics.t);\n            if (metrics.cb)\n                box.b = Math.max(box.b, metrics.b);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], pars: IStrokeParameters, metrics?: any) {\n            var x = args[0];\n            var y = args[1];\n            var radius = args[2];\n            var sa = args[3];\n            var ea = args[4];\n            var cc = args[5];\n\n            if (ea === sa)\n                return;\n            this.init(metrics, x, y, radius, sa, ea, cc);\n\n            box.l = Math.min(box.l, sx, metrics.ex);\n            box.r = Math.max(box.r, sx, metrics.ex);\n            box.t = Math.min(box.t, sy, metrics.ey);\n            box.b = Math.max(box.b, sy, metrics.ey);\n\n            var hs = pars.strokeThickness / 2.0;\n            if (metrics.cl)\n                box.l = Math.min(box.l, metrics.l - hs);\n            if (metrics.cr)\n                box.r = Math.max(box.r, metrics.r + hs);\n            if (metrics.ct)\n                box.t = Math.min(box.t, metrics.t - hs);\n            if (metrics.cb)\n                box.b = Math.max(box.b, metrics.b + hs);\n\n            var cap = pars.strokeStartLineCap || pars.strokeEndLineCap || 0; //HTML5 doesn't support start and end cap\n            var sv = this.getStartVector(metrics.sx, metrics.sy, args, metrics);\n            sv[0] = -sv[0];\n            sv[1] = -sv[1];\n            var ss = getCapSpread(sx, sy, pars.strokeThickness, cap, sv);\n            var ev = this.getEndVector(metrics.sx, metrics.sy, args, metrics);\n            var es = getCapSpread(metrics.ex, metrics.ey, pars.strokeThickness, cap, ev);\n\n            box.l = Math.min(box.l, ss.x1, ss.x2, es.x1, es.x2);\n            box.r = Math.max(box.r, ss.x1, ss.x2, es.x1, es.x2);\n            box.t = Math.min(box.t, ss.y1, ss.y2, es.y1, es.y2);\n            box.b = Math.max(box.b, ss.y1, ss.y2, es.y1, es.y2);\n        }\n\n        getStartVector(sx: number, sy: number, args: any[], metrics?: any): number[] {\n            var x = args[0];\n            var y = args[1];\n            var radius = args[2];\n            var sa = args[3];\n            var ea = args[4];\n            var cc = args[5];\n            this.init(metrics, x, y, radius, sa, ea, cc);\n\n            var rv = [\n                sx - x,\n                sy - y\n            ];\n            if (cc)\n                return [rv[1], -rv[0]];\n            return [-rv[1], rv[0]];\n        }\n\n        getEndVector(sx: number, sy: number, args: any[], metrics?: any): number[] {\n            var x = args[0];\n            var y = args[1];\n            var radius = args[2];\n            var sa = args[3];\n            var ea = args[4];\n            var cc = args[5];\n            this.init(metrics, x, y, radius, sa, ea, cc);\n\n            var rv = [\n                metrics.ex - x,\n                metrics.ey - y\n            ];\n            if (cc)\n                return [rv[1], -rv[0]];\n            return [-rv[1], rv[0]];\n        }\n    }\n\n    function arcContainsPoint(sx: number, sy: number, ex: number, ey: number, cpx: number, cpy: number, cc: boolean): boolean {\n        // var a = ex - sx;\n        // var b = cpx - sx;\n        // var c = ey - sy;\n        // var d = cpy - sy;\n        // det = ad - bc;\n        var n = (ex - sx) * (cpy - sy) - (cpx - sx) * (ey - sy);\n        if (n === 0)\n            return true;\n        if (n > 0 && cc)\n            return true;\n        if (n < 0 && !cc)\n            return true;\n        return false;\n    }\n\n    function getCapSpread(x: number, y: number, thickness: number, cap: PenLineCap, vector: number[]) {\n        var hs = thickness / 2.0;\n        switch (cap) {\n            case PenLineCap.Round:\n                return {\n                    x1: x - hs,\n                    x2: x + hs,\n                    y1: y - hs,\n                    y2: y + hs\n                };\n                break;\n            case PenLineCap.Square:\n                var ed = normalizeVector(vector);\n                var edo = perpendicularVector(ed);\n                return {\n                    x1: x + hs * (ed[0] + edo[0]),\n                    x2: x + hs * (ed[0] - edo[0]),\n                    y1: y + hs * (ed[1] + edo[1]),\n                    y2: y + hs * (ed[1] - edo[1])\n                };\n                break;\n            case PenLineCap.Flat:\n            default:\n                var ed = normalizeVector(vector);\n                var edo = perpendicularVector(ed);\n                return {\n                    x1: x + hs * edo[0],\n                    x2: x + hs * -edo[0],\n                    y1: y + hs * edo[1],\n                    y2: y + hs * -edo[1]\n                };\n                break;\n        }\n    }\n\n    function normalizeVector(v: number[]): number[] {\n        var len = Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        return [\n            v[0] / len,\n            v[1] / len\n        ];\n    }\n\n    function perpendicularVector(v: number[]): number[] {\n        return [\n            -v[1],\n            v[0]\n        ];\n    }\n}","namespace gfx.segments {\n    export class LineTo implements ISegment {\n        draw(ctx: CanvasRenderingContext2D, args: any[]) {\n            var x = args[0];\n            var y = args[1];\n            ctx.lineTo(x, y);\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[]) {\n            var x = args[0];\n            var y = args[1];\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], pars: IStrokeParameters) {\n            this.extendFillBox(box, sx, sy, args);\n        }\n\n        getStartVector(sx: number, sy: number, args: any[]): number[] {\n            return [\n                args[0] - sx,\n                args[1] - sy\n            ];\n        }\n\n        getEndVector(sx: number, sy: number, args: any[]): number[] {\n            return [\n                args[0] - sx,\n                args[1] - sy\n            ];\n        }\n    }\n}","/// <reference path=\"LineTo\" />\n/// <reference path=\"Arc\" />\n\nnamespace gfx.segments {\n    export interface IArcToMetrics {\n        inited: boolean;\n        sx: number;\n        sy: number;\n        line: {\n            args: any[];\n        };\n        arc: {\n            sx: number;\n            sy: number;\n            args: any[];\n            metrics?: IArcMetrics;\n        };\n    }\n\n    var _arc = new Arc();\n    var _lineTo = new LineTo();\n\n    export class ArcTo implements ISegment {\n        draw(ctx: CanvasRenderingContext2D, args: any[]) {\n            var x1: number = args[0];\n            var y1: number = args[1];\n            var x2: number = args[2];\n            var y2: number = args[3];\n            var radius: number = args[4];\n            ctx.arcTo(x1, y1, x2, y2, radius);\n        }\n\n        init(metrics: IArcToMetrics, sx: number, sy: number, args: any[]) {\n            if (metrics.inited || sx !== metrics.sx || sy !== metrics.sy)\n                return;\n            metrics.sx = sx;\n            metrics.sy = sy;\n\n            var x1: number = args[0];\n            var y1: number = args[1];\n            var x2: number = args[2];\n            var y2: number = args[3];\n            var radius: number = args[4];\n\n            var v1 = la.vec2.create(x1 - sx, y1 - sy);\n            var v2 = la.vec2.create(x2 - x1, y2 - y1);\n            var inner_theta = Math.PI - la.vec2.angleBetween(v1, v2);\n            //find 2 points tangent to imaginary circle along guide lines\n            var a = getTangentPoint(inner_theta, radius, la.vec2.create(sx, sy), v1, true);\n            var b = getTangentPoint(inner_theta, radius, la.vec2.create(x1, y1), v2, false);\n            metrics.line = {\n                args: [a[0], a[1]]\n            };\n\n            metrics.arc = createArc(a, v1, b, v2, radius);\n\n            metrics.inited = true;\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics?: any) {\n            this.init(metrics, sx, sy, args);\n\n            box.l = Math.min(box.l, sx);\n            box.r = Math.max(box.r, sx);\n            box.t = Math.min(box.t, sy);\n            box.b = Math.max(box.b, sy);\n\n            var mline = metrics.line,\n                marc = metrics.arc;\n            _lineTo.extendFillBox(box, mline.sx, mline.sy, mline.args);\n            _arc.extendFillBox(box, marc.sx, marc.sy, marc.args, marc.metrics);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], pars: IStrokeParameters, metrics?: any) {\n            this.init(metrics, sx, sy, args);\n\n            var hs = pars.strokeThickness / 2;\n            box.l = Math.min(box.l, sx - hs);\n            box.r = Math.max(box.r, sx + hs);\n            box.t = Math.min(box.t, sy - hs);\n            box.b = Math.max(box.b, sy + hs);\n\n            var mline = metrics.line,\n                marc = metrics.arc;\n            _lineTo.extendStrokeBox(box, mline.sx, mline.sy, mline.args, pars);\n            _arc.extendStrokeBox(box, marc.sx, marc.sy, marc.args, marc.metrics, pars);\n        }\n\n        getStartVector(sx: number, sy: number, args: any[], metrics?: any): number[] {\n            this.init(metrics, sx, sy, args);\n            return _lineTo.getStartVector(sx, sy, metrics.line.args);\n        }\n\n        getEndVector(sx: number, sy: number, args: any[], metrics?: any): number[] {\n            this.init(metrics, sx, sy, args);\n            var marc = metrics.arc;\n            return _arc.getEndVector(marc.sx, marc.sy, marc.args, marc.metrics);\n        }\n    }\n\n    function createArc(a: Float32Array, v1: Float32Array, b: Float32Array, v2: Float32Array, radius: number) {\n        //find center point\n        var c = getPerpendicularIntersections(a, v1, b, v2);\n        //counter clockwise test\n        var cc = !la.vec2.isClockwiseTo(v1, v2);\n        //find starting angle -- [1,0] is origin direction of 0rad\n        var sa = Math.atan2(a[1] - c[1], a[0] - c[0]);\n        if (sa < 0)\n            sa = (2 * Math.PI) + sa;\n        var ea = Math.atan2(b[1] - c[1], b[0] - c[0]);\n        if (ea < 0)\n            ea = (2 * Math.PI) + ea;\n        return {\n            sx: a[0],\n            sy: a[1],\n            args: [c[0], c[1], radius, sa, ea, cc],\n            metrics: <IArcMetrics>{}\n        };\n    }\n\n    function getTangentPoint(theta: number, radius: number, s: Float32Array, d: Float32Array, invert: boolean): Float32Array {\n        var len = Math.sqrt(d[0] * d[0] + d[1] * d[1]);\n        var f = radius / Math.tan(theta / 2);\n        var t = f / len;\n        if (invert)\n            t = 1 - t;\n        return la.vec2.create(s[0] + t * d[0], s[1] + t * d[1]);\n    }\n\n    function getPerpendicularIntersections(s1: Float32Array, d1: Float32Array, s2: Float32Array, d2: Float32Array): Float32Array {\n        var p1 = la.vec2.orthogonal(la.vec2.create(d1[0], d1[2]));\n        var p2 = la.vec2.orthogonal(la.vec2.create(d2[0], d2[2]));\n        return la.vec2.intersection(s1, p1, s2, p2);\n    }\n}","namespace gfx.segments {\n    export class BezierCurveTo implements ISegment {\n        draw(ctx: CanvasRenderingContext2D, args: any[]) {\n            var cp1x: number = args[0];\n            var cp1y: number = args[1];\n            var cp2x: number = args[2];\n            var cp2y: number = args[3];\n            var x: number = args[4];\n            var y: number = args[5];\n            ctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[]) {\n            var cp1x: number = args[0];\n            var cp1y: number = args[1];\n            var cp2x: number = args[2];\n            var cp2y: number = args[3];\n            var x: number = args[4];\n            var y: number = args[5];\n\n            var m = getMaxima(sx, cp1x, cp2x, x, sy, cp1y, cp2y, y);\n            if (m.x[0] != null) {\n                box.l = Math.min(box.l, m.x[0]);\n                box.r = Math.max(box.r, m.x[0]);\n            }\n            if (m.x[1] != null) {\n                box.l = Math.min(box.l, m.x[1]);\n                box.r = Math.max(box.r, m.x[1]);\n            }\n            if (m.y[0] != null) {\n                box.t = Math.min(box.t, m.y[0]);\n                box.b = Math.max(box.b, m.y[0]);\n            }\n            if (m.y[1] != null) {\n                box.t = Math.min(box.t, m.y[1]);\n                box.b = Math.max(box.b, m.y[1]);\n            }\n\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], pars: IStrokeParameters) {\n            var cp1x: number = args[0];\n            var cp1y: number = args[1];\n            var cp2x: number = args[2];\n            var cp2y: number = args[3];\n            var x: number = args[4];\n            var y: number = args[5];\n            var hs = pars.strokeThickness / 2.0;\n\n            var m = getMaxima(sx, cp1x, cp2x, x, sy, cp1y, cp2y, y);\n            if (m.x[0] != null) {\n                box.l = Math.min(box.l, m.x[0] - hs);\n                box.r = Math.max(box.r, m.x[0] + hs);\n            }\n            if (m.x[1] != null) {\n                box.l = Math.min(box.l, m.x[1] - hs);\n                box.r = Math.max(box.r, m.x[1] + hs);\n            }\n            if (m.y[0] != null) {\n                box.t = Math.min(box.t, m.y[0] - hs);\n                box.b = Math.max(box.b, m.y[0] + hs);\n            }\n            if (m.y[1] != null) {\n                box.t = Math.min(box.t, m.y[1] - hs);\n                box.b = Math.max(box.b, m.y[1] + hs);\n            }\n\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n\n        getStartVector(sx: number, sy: number, args: any[]): number[] {\n            var cp1x: number = args[0];\n            var cp1y: number = args[1];\n            //[F(0)'x, F(0)'y]\n            return [\n                3 * (cp1x - sx),\n                3 * (cp1y - sy)\n            ];\n        }\n\n        getEndVector(sx: number, sy: number, args: any[]): number[] {\n            var cp2x: number = args[2];\n            var cp2y: number = args[3];\n            var x: number = args[4];\n            var y: number = args[5];\n            //[F(1)'x, F(1)'y]\n            return [\n                3 * (x - cp2x),\n                3 * (y - cp2y)\n            ];\n        }\n    }\n\n    //http://pomax.nihongoresources.com/pages/bezier/\n    /* Cubic Bezier curve is defined by parameteric curve:\n     * F(t)x =\n     * F(t)y =\n     * where\n     *  s = start point\n     *  cp1 = control point 1\n     *  cp2 = control point 2\n     *  e = end point\n     *\n     * We find the coordinates (4) where F(t)x/dt = 0, F(t)y/dt = 0\n     * (within the constraints of the curve (0 <= t <= 1)\n     * These points will expand the bounding box\n     */\n\n    interface IMaxima {\n        x: number[];\n        y: number[];\n    }\n    function getMaxima(x1: number, x2: number, x3: number, x4: number, y1: number, y2: number, y3: number, y4: number): IMaxima {\n        return {\n            x: cod(x1, x2, x3, x4),\n            y: cod(y1, y2, y3, y4)\n        };\n    }\n\n    function cod(a: number, b: number, c: number, d: number): number[] {\n        var u = 2 * a - 4 * b + 2 * c;\n        var v = b - a;\n        var w = -a + 3 * b + d - 3 * c;\n        var rt = Math.sqrt(u * u - 4 * v * w);\n\n        var cods: number[] = [null, null];\n        if (isNaN(rt))\n            return cods;\n\n        var t: number,\n            ot: number;\n\n        t = (-u + rt) / (2 * w);\n        if (t >= 0 && t <= 1) {\n            ot = 1 - t;\n            cods[0] = (a * ot * ot * ot) + (3 * b * t * ot * ot) + (3 * c * ot * t * t) + (d * t * t * t);\n        }\n\n        t = (-u - rt) / (2 * w);\n        if (t >= 0 && t <= 1) {\n            ot = 1 - t;\n            cods[1] = (a * ot * ot * ot) + (3 * b * t * ot * ot) + (3 * c * ot * t * t) + (d * t * t * t);\n        }\n\n        return cods;\n    }\n}","namespace gfx.segments {\n    export class ClosePath implements ISegment {\n        draw(ctx: CanvasRenderingContext2D, args: any[]) {\n            ctx.closePath();\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[]) {\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], pars: IStrokeParameters) {\n        }\n\n        getStartVector(sx: number, sy: number, args: any[]): number[] {\n            return undefined;\n        }\n\n        getEndVector(sx: number, sy: number, args: any[]): number[] {\n            return undefined;\n        }\n\n    }\n}","namespace gfx.segments {\n    export class Ellipse implements ISegment {\n        draw(ctx: CanvasRenderingContext2D, args: any[]) {\n            var x: number = args[0];\n            var y: number = args[1];\n            var rx: number = args[2];\n            var ry: number = args[3];\n            var rotation: number = args[4];\n            var sa: number = args[5];\n            var ea: number = args[6];\n            var ac: boolean = args[7];\n            ctx.ellipse(x, y, rx, ry, rotation, sa, ea, ac);\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics?: any) {\n            var x: number = args[0];\n            var y: number = args[1];\n            var rx: number = args[2];\n            var ry: number = args[3];\n            var rotation: number = args[4];\n            var sa: number = args[5];\n            var ea: number = args[6];\n            var ac: boolean = args[7] === true;\n\n            console.warn(\"extendFillBox\", \"Currently not accounting for rotation or start/end angle.\");\n            //TODO: Account for rotation, start angle, end angle (anticlockwise)\n\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x + rx + rx);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y + ry + ry);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], pars: IStrokeParameters, metrics?: any) {\n            var x: number = args[0];\n            var y: number = args[1];\n            var rx: number = args[2];\n            var ry: number = args[3];\n            var rotation: number = args[4];\n            var sa: number = args[5];\n            var ea: number = args[6];\n            var ac: boolean = args[7] === true;\n\n            console.warn(\"extendStrokeBox\", \"Currently not accounting for rotation or start/end angle.\");\n            //TODO: Account for rotation, start angle, end angle (anticlockwise)\n\n            var hs = pars.strokeThickness / 2.0;\n            box.l = Math.min(box.l, x - hs);\n            box.r = Math.max(box.r, x + rx + rx + hs);\n            box.t = Math.min(box.t, y - hs);\n            box.b = Math.max(box.b, y + ry + ry + hs);\n        }\n\n        getStartVector(sx: number, sy: number, args: any[], metrics?: any): number[] {\n            console.warn(\"getStartVector\", \"Currently not accounting for rotation or start/end angle.\");\n            return undefined;\n        }\n\n        getEndVector(sx: number, sy: number, args: any[], metrics?: any): number[] {\n            console.warn(\"getEndVector\", \"Currently not accounting for rotation or start/end angle.\");\n            return undefined;\n        }\n    }\n}","namespace gfx.segments {\n    export class MoveTo implements ISegment {\n        draw(ctx: CanvasRenderingContext2D, args: any[]) {\n            var x = args[0];\n            var y = args[1];\n            ctx.moveTo(x, y);\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[]) {\n            var x = args[0];\n            var y = args[1];\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], pars: IStrokeParameters) {\n            this.extendFillBox(box, sx, sy, args);\n        }\n\n        getStartVector(sx: number, sy: number, args: any[]): number[] {\n            return undefined;\n        }\n\n        getEndVector(sx: number, sy: number, args: any[]): number[] {\n            return undefined;\n        }\n    }\n}","namespace gfx.segments {\n    export class QuadraticCurveTo implements ISegment {\n        draw(ctx: CanvasRenderingContext2D, args: any[]) {\n            var cpx: number = args[0];\n            var cpy: number = args[1];\n            var x: number = args[2];\n            var y: number = args[3];\n            ctx.quadraticCurveTo(cpx, cpy, x, y);\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[]) {\n            var cpx: number = args[0];\n            var cpy: number = args[1];\n            var x: number = args[2];\n            var y: number = args[3];\n\n            var m = getMaxima(sx, cpx, x, sy, cpy, y);\n            if (m.x != null) {\n                box.l = Math.min(box.l, m.x);\n                box.r = Math.max(box.r, m.x);\n            }\n            if (m.y != null) {\n                box.t = Math.min(box.t, m.y);\n                box.b = Math.max(box.b, m.y);\n            }\n\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], pars: IStrokeParameters) {\n            var cpx: number = args[0];\n            var cpy: number = args[1];\n            var x: number = args[2];\n            var y: number = args[3];\n            var hs = pars.strokeThickness / 2.0;\n\n            var m = getMaxima(sx, cpx, x, sy, cpy, y);\n            if (m.x) {\n                box.l = Math.min(box.l, m.x - hs);\n                box.r = Math.max(box.r, m.x + hs);\n            }\n            if (m.y) {\n                box.t = Math.min(box.t, m.y - hs);\n                box.b = Math.max(box.b, m.y + hs);\n            }\n\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n\n        getStartVector(sx: number, sy: number, args: any[]): number[] {\n            var cpx: number = args[0];\n            var cpy: number = args[1];\n            //[F(0)'x, F(0)'y]\n            return [\n                2 * (cpx - sx),\n                2 * (cpy - sy)\n            ];\n        }\n\n        getEndVector(sx: number, sy: number, args: any[]): number[] {\n            var cpx: number = args[0];\n            var cpy: number = args[1];\n            var x: number = args[2];\n            var y: number = args[3];\n            //[F(1)'x, F(1)'y]\n            return [\n                2 * (x - cpx),\n                2 * (y - cpy)\n            ];\n        }\n    }\n\n    //http://pomax.nihongoresources.com/pages/bezier/\n    /* Quadratic Bezier curve is defined by parametric curve:\n     *  F(t)x = s.x(1-t)^2 + cp.x(1-t)t + e.x(t^2)\n     *  F(t)x = s.y(1-t)^2 + cp.y(1-t)t + e.y(t^2)\n     * where\n     *  s = start point\n     *  cp = control point\n     *  e = end point\n     *\n     * We find the coordinates (2) where F(t)x/dt = 0, F(t)y/dt = 0\n     * (within the constraints of the curve (0 <= t <= 1)\n     * These points will expand the bounding box\n     */\n\n    interface IMaxima {\n        x: number;\n        y: number;\n    }\n    function getMaxima(x1: number, x2: number, x3: number, y1: number, y2: number, y3: number): IMaxima {\n        return {\n            x: cod(x1, x2, x3),\n            y: cod(y1, y2, y3)\n        };\n    }\n\n    function cod(a: number, b: number, c: number): number {\n        var t = (a - b) / (a - 2 * b + c);\n        if (t < 0 || t > 1)\n            return null;\n        return (a * Math.pow(1 - t, 2)) + (2 * b * (1 - t) * t) + (c * Math.pow(t, 2));\n    }\n}","namespace gfx.segments {\n    export class Rect implements ISegment {\n        draw(ctx: CanvasRenderingContext2D, args: any[]) {\n            var x: number = args[0];\n            var y: number = args[1];\n            var w: number = args[2];\n            var h: number = args[3];\n            ctx.rect(x, y, w, h);\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics?: any) {\n            var x: number = args[0];\n            var y: number = args[1];\n            var w: number = args[2];\n            var h: number = args[3];\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x + w);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y + h);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], pars: IStrokeParameters, metrics?: any) {\n            var x: number = args[0];\n            var y: number = args[1];\n            var w: number = args[2];\n            var h: number = args[3];\n            var hs = pars.strokeThickness / 2.0;\n            box.l = Math.min(box.l, x - hs);\n            box.r = Math.max(box.r, x + w + hs);\n            box.t = Math.min(box.t, y - hs);\n            box.b = Math.max(box.b, y + h + hs);\n        }\n\n        getStartVector(sx: number, sy: number, args: any[], metrics?: any): number[] {\n            return undefined;\n        }\n\n        getEndVector(sx: number, sy: number, args: any[], metrics?: any): number[] {\n            return undefined;\n        }\n    }\n}","/// <reference path=\"ClosePath\" />\n/// <reference path=\"MoveTo\" />\n/// <reference path=\"LineTo\" />\n/// <reference path=\"BezierCurveTo\" />\n/// <reference path=\"QuadraticCurveTo\" />\n/// <reference path=\"Arc\" />\n/// <reference path=\"ArcTo\" />\n/// <reference path=\"Ellipse\" />\n/// <reference path=\"Rect\" />\n\nnamespace gfx.segments {\n    export interface ISegment {\n        draw(ctx: CanvasRenderingContext2D, args: any[]);\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics?: any);\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], pars: IStrokeParameters, metrics?: any);\n        getStartVector(sx: number, sy: number, args: any[], metrics?: any): number[];\n        getEndVector(sx: number, sy: number, args: any[], metrics?: any): number[];\n    }\n\n    export var all = [];\n    all[PathOpType.closePath] = new ClosePath();\n    all[PathOpType.moveTo] = new MoveTo();\n    all[PathOpType.lineTo] = new LineTo();\n    all[PathOpType.bezierCurveTo] = new BezierCurveTo();\n    all[PathOpType.quadraticCurveTo] = new QuadraticCurveTo();\n    all[PathOpType.arc] = new Arc();\n    all[PathOpType.arcTo] = new ArcTo();\n    all[PathOpType.ellipse] = new Ellipse();\n    all[PathOpType.rect] = new Rect();\n}","namespace gfx.parse.buffer {\n    export class Parser implements IParser {\n        parse(path: IPath, data: string|Uint8Array): IPath {\n            var buffer = toBuffer(data);\n            //TODO: Implement\n            return undefined;\n        }\n    }\n\n    export function parseNumber(tracker: IParseTracker): number {\n        var start = tracker.offset;\n        var data = tracker.data;\n        var len = data.length;\n        //NaN\n        if (isNaN(data, tracker.offset)) {\n            tracker.offset += 3;\n            return NaN;\n        }\n\n        //Check - or +\n        var negate = false;\n        if (data[tracker.offset] === 0x2D) {\n            negate = true;\n            tracker.offset++;\n        } else if (data[tracker.offset] === 0x2B) {\n            tracker.offset++;\n        }\n\n        //Infinity\n        if (isInfinity(data, tracker.offset)) {\n            tracker.offset += 8;\n            return negate ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n        }\n\n        //(characteristic)[.(mantissa)][Ee[+-](significand)]\n        parseInteger(tracker);\n        var cur = data[tracker.offset];\n        if (cur === 0x2E) { // '.'\n            tracker.offset++;\n            if (!parseMantissa(tracker))\n                throw new Error(\"Invalid number\");\n        }\n\n        if (!parseSignificand(tracker))\n            throw new Error(\"Invalid number\");\n\n        return parseFloat(getSlice(data, start, tracker.offset - start));\n    }\n\n    function toBuffer(data: string|Uint8Array): Uint8Array {\n        if (data instanceof Uint8Array)\n            return data;\n        if (typeof TextEncoder === \"function\")\n            return new TextEncoder().encode(<string>data);\n    }\n\n    function isNaN(data: Uint8Array, i: number): boolean {\n        return data[i + 0] === 0x4E //N\n            && data[i + 1] === 0x61 //a\n            && data[i + 2] === 0x4E //N\n            ;\n    }\n\n    function isInfinity(data: Uint8Array, i: number): boolean {\n        return data[i + 0] === 0x49 //I\n            && data[i + 1] === 0x6E //n\n            && data[i + 2] === 0x66 //f\n            && data[i + 3] === 0x69 //i\n            && data[i + 4] === 0x6E //n\n            && data[i + 5] === 0x69 //i\n            && data[i + 6] === 0x74 //t\n            && data[i + 7] === 0x79 //y\n            ;\n    }\n\n    function parseInteger(tracker: IParseTracker): boolean {\n        var start = tracker.offset;\n        var data = tracker.data;\n        var cur: number;\n        while ((cur = data[tracker.offset]) != null && cur >= 0x30 && cur <= 0x39) {\n            tracker.offset++;\n        }\n        return tracker.offset !== start;\n    }\n\n    function parseMantissa(tracker: IParseTracker): boolean {\n        var start = tracker.offset;\n        var data = tracker.data;\n        var cur: number;\n        while ((cur = data[tracker.offset]) != null && cur >= 0x30 && cur <= 0x39) {\n            tracker.offset++;\n        }\n        return tracker.offset !== start;\n    }\n\n    function parseSignificand(tracker: IParseTracker): boolean {\n        var data = tracker.data;\n        if (data[tracker.offset] !== 0x45 && data[tracker.offset] !== 0x65)\n            return true;\n        tracker.offset++;\n\n        var cur = data[tracker.offset];\n        if (cur === 0x2D || cur === 0x2B) // '-' '+'\n            tracker.offset++;\n        return parseInteger(tracker);\n    }\n\n    function getSlice(data: Uint8Array, offset: number, length: number): string {\n        var buf = new Array(length);\n        for (var i = 0; i < length; i++) {\n            buf[i] = data[offset + i];\n        }\n        return String.fromCharCode.apply(null, buf);\n    }\n}","// Path Markup Syntax: http://msdn.microsoft.com/en-us/library/cc189041(v=vs.95).aspx\n\n//FigureDescription Syntax\n// MoveCommand DrawCommands [CloseCommand]\n\n//Double Syntax\n// digits\n// digits.digits\n// 'Infinity'\n// '-Infinity'\n// 'NaN'\n\n//Point Syntax\n// x,y\n// x y\n\n//Loop until exhausted\n//  Parse FigureDescription\n//      Find \"M\" or \"m\"? - Parse MoveCommand (start point)\n//          <point>\n//\n//      Find \"L\" or \"l\"? - Parse LineCommand (end point)\n//          <point>\n//      Find \"H\" or \"h\"? - Parse HorizontalLineCommand (x)\n//          <double>\n//      Find \"V\" or \"v\"? - Parse VerticalLineCommand (y)\n//          <double>\n//      Find \"C\" or \"c\"? - Parse CubicBezierCurveCommand (control point 1, control point 2, end point)\n//          <point> <point> <point>\n//      Find \"Q\" or \"q\"? - Parse QuadraticBezierCurveCommand (control point, end point)\n//          <point> <point>\n//      Find \"S\" or \"s\"? - Parse SmoothCubicBezierCurveCommand (control point 2, end point)\n//          <point> <point>\n//      Find \"T\" or \"t\"? - Parse SmoothQuadraticBezierCurveCommand (control point, end point)\n//          <point> <point>\n//      Find \"A\" or \"a\"? - Parse EllipticalArcCommand (size, rotationAngle, isLargeArcFlag, sweepDirectionFlag, endPoint)\n//          <point> <double> <1,0> <1,0> <point>\n//\n//      Find \"Z\" or \"z\"? - CloseCommand\n\nnamespace gfx.parse.matching {\n    export class Parser implements IParser {\n        parse(path: IPath, data: string|Uint8Array): IPath {\n            if (typeof data === \"string\")\n                parse(path, data, data.length);\n            console.warn(\"Input parse data was not a string.\", data);\n            return path;\n        }\n    }\n\n    interface IPoint {\n        x: number;\n        y: number;\n    }\n\n    function parse(path: IPath, str: string, len: number) {\n        var index = 0;\n        var fillRule = FillRule.EvenOdd;\n        go();\n        path.fillRule = fillRule || FillRule.EvenOdd;\n\n        function go() {\n            var cp = {x: 0, y: 0};\n            var cp1: IPoint, cp2: IPoint, cp3: IPoint;\n            var start = {x: 0, y: 0};\n            var cbz = false; // last figure is a cubic bezier curve\n            var qbz = false; // last figure is a quadratic bezier curve\n            var cbzp = {x: 0, y: 0}; // points needed to create \"smooth\" beziers\n            var qbzp = {x: 0, y: 0}; // points needed to create \"smooth\" beziers\n\n            while (index < len) {\n                var c;\n                while (index < len && (c = str.charAt(index)) === ' ') {\n                    index++;\n                }\n                index++;\n                var relative = false;\n                switch (c) {\n                    case 'f':\n                    case 'F':\n                        c = str.charAt(index);\n                        if (c === '0')\n                            fillRule = FillRule.EvenOdd;\n                        else if (c === '1')\n                            fillRule = FillRule.NonZero;\n                        else\n                            return null;\n                        index++;\n                        c = str.charAt(index);\n                        break;\n                    case 'm':\n                        relative = true;\n                    case 'M':\n                        cp1 = parsePoint();\n                        if (cp1 == null)\n                            break;\n                        if (relative) {\n                            cp1.x += cp.x;\n                            cp1.y += cp.y;\n                        }\n                        path.moveTo(cp1.x, cp1.y);\n                        start.x = cp.x = cp1.x;\n                        start.y = cp.y = cp1.y;\n                        advance();\n                        while (morePointsAvailable()) {\n                            if ((cp1 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp1.x += cp.x;\n                                cp1.y += cp.y;\n                            }\n                            path.lineTo(cp1.x, cp1.y);\n                        }\n                        cp.x = cp1.x;\n                        cp.y = cp1.y;\n                        cbz = qbz = false;\n                        break;\n                    case 'l':\n                        relative = true;\n                    case 'L':\n                        while (morePointsAvailable()) {\n                            if ((cp1 = parsePoint()) == null)\n                                break;\n\n                            if (relative) {\n                                cp1.x += cp.x;\n                                cp1.y += cp.y;\n                            }\n\n                            path.lineTo(cp1.x, cp1.y);\n\n                            cp.x = cp1.x;\n                            cp.y = cp1.y;\n                            advance();\n                        }\n                        cbz = qbz = false;\n                        break;\n                    case 'h':\n                        relative = true;\n                    case 'H':\n                        var x = parseDouble();\n                        if (x == null)\n                            break;\n\n                        if (relative)\n                            x += cp.x;\n                        cp = {x: x, y: cp.y};\n\n                        path.lineTo(cp.x, cp.y);\n                        cbz = qbz = false;\n                        break;\n                    case 'v':\n                        relative = true;\n                    case 'V':\n                        var y = parseDouble();\n                        if (y == null)\n                            break;\n\n                        if (relative)\n                            y += cp.y;\n                        cp = {x: cp.x, y: y};\n\n                        path.lineTo(cp.x, cp.y);\n                        cbz = qbz = false;\n                        break;\n                    case 'c':\n                        relative = true;\n                    case 'C':\n                        while (morePointsAvailable()) {\n                            if ((cp1 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp1.x += cp.x;\n                                cp1.y += cp.y;\n                            }\n                            advance();\n                            if ((cp2 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp2.x += cp.x;\n                                cp2.y += cp.y;\n                            }\n                            advance();\n                            if ((cp3 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp3.x += cp.x;\n                                cp3.y += cp.y;\n                            }\n                            advance();\n\n                            path.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, cp3.x, cp3.y);\n\n                            cp1.x = cp3.x;\n                            cp1.y = cp3.y;\n                        }\n                        cp.x = cp3.x;\n                        cp.y = cp3.y;\n                        cbz = true;\n                        cbzp.x = cp2.x;\n                        cbzp.y = cp2.y;\n                        qbz = false;\n                        break;\n                    case 's':\n                        relative = true;\n                    case 'S':\n                        while (morePointsAvailable()) {\n                            if ((cp2 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp2.x += cp.x;\n                                cp2.y += cp.y;\n                            }\n                            advance();\n                            if ((cp3 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp3.x += cp.x;\n                                cp3.y += cp.y;\n                            }\n\n                            if (cbz) {\n                                cp1.x = 2 * cp.x - cbzp.x;\n                                cp1.y = 2 * cp.y - cbzp.y;\n                            } else\n                                cp1 = cp;\n\n                            path.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, cp3.x, cp3.y);\n\n                            cbz = true;\n                            cbzp.x = cp2.x;\n                            cbzp.y = cp2.y;\n\n                            cp.x = cp3.x;\n                            cp.y = cp3.y;\n\n                            advance();\n                        }\n                        qbz = false;\n                        break;\n                    case 'q':\n                        relative = true;\n                    case 'Q':\n                        while (morePointsAvailable()) {\n                            if ((cp1 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp1.x += cp.x;\n                                cp1.y += cp.y;\n                            }\n                            advance();\n                            if ((cp2 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp2.x += cp.x;\n                                cp2.y += cp.y;\n                            }\n                            advance();\n\n                            path.quadraticCurveTo(cp1.x, cp1.y, cp2.x, cp2.y);\n\n                            cp.x = cp2.x;\n                            cp.y = cp2.y;\n                        }\n                        qbz = true;\n                        qbzp.x = cp1.x;\n                        qbzp.y = cp1.y;\n                        cbz = false;\n                        break;\n                    case 't':\n                        relative = true;\n                    case 'T':\n                        while (morePointsAvailable()) {\n                            if ((cp2 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp2.x += cp.x;\n                                cp2.y += cp.y;\n                            }\n\n                            if (qbz) {\n                                cp1.x = 2 * cp.x - qbzp.x;\n                                cp1.y = 2 * cp.y - qbzp.y;\n                            } else\n                                cp1 = cp;\n\n                            path.quadraticCurveTo(cp1.x, cp1.y, cp2.x, cp2.y);\n\n                            qbz = true;\n                            qbzp.x = cp1.x;\n                            qbzp.y = cp1.y;\n\n                            cp.x = cp2.x;\n                            cp.y = cp2.y;\n\n                            advance();\n                        }\n                        cbz = false;\n                        break;\n                    case 'a':\n                        relative = true;\n                    case 'A':\n                        while (morePointsAvailable()) {\n                            if ((cp1 = parsePoint()) == null)\n                                break;\n\n                            var angle = parseDouble();\n                            var is_large = parseDouble() !== 0;\n                            var sweep = SweepDirection.Counterclockwise;\n                            if (parseDouble() !== 0) sweep = SweepDirection.Clockwise;\n\n                            if ((cp2 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp2.x += cp.x;\n                                cp2.y += cp.y;\n                            }\n\n                            console.warn(\"ellipticalArc not implemented\");\n                            //path.ellipticalArc(cp1.x, cp1.y, angle, is_large, sweep, cp2.x, cp2.y);\n\n                            cp.x = cp2.x;\n                            cp.y = cp2.y;\n\n                            advance();\n                        }\n                        cbz = qbz = false;\n                        break;\n                    case 'z':\n                    case 'Z':\n                        path.closePath();\n\n                        cp.x = start.x;\n                        cp.y = start.y;\n                        cbz = qbz = false;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n\n        function parsePoint(): IPoint {\n            var x = parseDouble();\n            if (x == null)\n                return null;\n\n            var c;\n            while (index < len && ((c = str.charAt(index)) === ' ' || c === ',')) {\n                index++;\n            }\n            if (index >= len)\n                return null;\n\n            var y = parseDouble();\n            if (y == null)\n                return null;\n\n            return {x: x, y: y};\n        }\n\n        function parseDouble(): number {\n            advance();\n            var isNegative = false;\n            if (match('-')) {\n                isNegative = true;\n                index++;\n            } else if (match('+')) {\n                index++;\n            }\n            if (match('Infinity')) {\n                index += 8;\n                return isNegative ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n            }\n            if (match('NaN'))\n                return NaN;\n\n            var temp = '';\n            while (index < len) {\n                var code = str.charCodeAt(index);\n                var c = str[index];\n                //0-9, ., E, e, E-, e-\n                if (code >= 48 && code <= 57)\n                    temp += c;\n                else if (code === 46)\n                    temp += c;\n                else if (c === 'E' || c === 'e') {\n                    temp += c;\n                    if (str[index + 1] === '-') {\n                        temp += '-';\n                        index++;\n                    }\n                }\n                else\n                    break;\n                index++;\n            }\n            if (temp.length === 0)\n                return null;\n            var f = parseFloat(temp);\n            return isNegative ? -f : f;\n        }\n\n        function advance() {\n            var code: number;\n            var c: string;\n            while (index < len) {\n                code = str.charCodeAt(index);\n                //alphanum\n                if ((code >= 65 && code <= 90) || (code >= 97 && code <= 122) || (code >= 48 && code <= 57))\n                    break;\n                c = String.fromCharCode(code);\n                if (c === '.')\n                    break;\n                if (c === '-')\n                    break;\n                if (c === '+')\n                    break;\n                index++;\n            }\n        }\n\n        function match(matchStr: string): boolean {\n            var c1: string;\n            var c2: string;\n            for (var i = 0; i < matchStr.length && (index + i) < len; i++) {\n                c1 = matchStr.charAt(i);\n                c2 = str.charAt(index + i);\n                if (c1 !== c2)\n                    return false;\n            }\n            return true;\n        }\n\n        function morePointsAvailable(): boolean {\n            var c;\n            while (index < len && ((c = str.charAt(index)) === ',' || c === ' ')) {\n                index++;\n            }\n            if (index >= len)\n                return false;\n            if (c === '.' || c === '-' || c === '+')\n                return true;\n            var code = str.charCodeAt(index);\n            return code >= 48 && code <= 57;\n        }\n    }\n}","namespace gfx {\n    export enum FillRule {\n        EvenOdd = 0,\n        NonZero = 1\n    }\n    export enum SweepDirection {\n        Counterclockwise = 0,\n        Clockwise = 1,\n    }\n    export enum PenLineCap {\n        Flat = 0,\n        Square = 1,\n        Round = 2,\n        Triangle = 3,\n    }\n    export enum PenLineJoin {\n        Miter = 0,\n        Bevel = 1,\n        Round = 2,\n    }\n}","namespace gfx {\n    interface IPathOp {\n        type: PathOpType;\n        args: any[];\n        metrics?: any;\n    }\n\n    export enum PathOpType {\n        closePath,\n        moveTo,\n        lineTo,\n        bezierCurveTo,\n        quadraticCurveTo,\n        arc,\n        arcTo,\n        ellipse,\n        rect,\n    }\n\n    export class Path implements IPath {\n        private $ops: IPathOp[];\n\n        fillRule: FillRule;\n\n        constructor();\n        constructor(path: Path);\n        constructor(d: string);\n        constructor(arg0?: string|Path) {\n            if (arg0 instanceof Path) {\n                this.$ops = JSON.parse(JSON.stringify(this.$ops));\n            } else if (typeof arg0 === \"string\") {\n                this.$ops = [];\n                Path.parse.call(this, arg0);\n            } else {\n                this.$ops = [];\n            }\n        }\n\n        addPath(path: Path, transform?: SVGMatrix) {\n            console.warn(\"addPath\", \"Not implemented\");\n        }\n\n        closePath() {\n            this.$ops.push({\n                type: PathOpType.closePath,\n                args: Array.prototype.slice.call(arguments, 0)\n            });\n        }\n\n        moveTo(x: number, y: number) {\n            this.$ops.push({\n                type: PathOpType.moveTo,\n                args: Array.prototype.slice.call(arguments, 0)\n            });\n        }\n\n        lineTo(x: number, y: number) {\n            this.$ops.push({\n                type: PathOpType.lineTo,\n                args: Array.prototype.slice.call(arguments, 0)\n            });\n        }\n\n        bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number) {\n            this.$ops.push({\n                type: PathOpType.bezierCurveTo,\n                args: Array.prototype.slice.call(arguments, 0)\n            });\n        }\n\n        quadraticCurveTo(cpx: number, cpy: number, x: number, y: number) {\n            this.$ops.push({\n                type: PathOpType.quadraticCurveTo,\n                args: Array.prototype.slice.call(arguments, 0)\n            });\n        }\n\n        arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean) {\n            this.$ops.push({\n                type: PathOpType.arc,\n                args: Array.prototype.slice.call(arguments, 0),\n                metrics: {}\n            });\n        }\n\n        arcTo(x1: number, y1: number, x2: number, y2: number, radius: number) {\n            this.$ops.push({\n                type: PathOpType.arcTo,\n                args: Array.prototype.slice.call(arguments, 0),\n                metrics: {}\n            });\n        }\n\n        ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean) {\n            this.$ops.push({\n                type: PathOpType.ellipse,\n                args: Array.prototype.slice.call(arguments, 0)\n            });\n        }\n\n        rect(x: number, y: number, width: number, height: number) {\n            this.$ops.push({\n                type: PathOpType.rect,\n                args: Array.prototype.slice.call(arguments, 0)\n            });\n        }\n\n        draw(ctx: CanvasRenderingContext2D) {\n            for (var i = 0, ops = this.$ops, len = ops.length; i < len; i++) {\n                let op = ops[i];\n                let name: string = PathOpType[op.type];\n                let func = ctx[name];\n                if (!func)\n                    throw new Error(`Invalid path operation type. [${op.type}]`);\n                func.apply(this, op.args);\n            }\n        }\n\n        static parse(d: string): IPath {\n            var parser = parse.getParser();\n            var _this = <Path><any>this;\n            var inst = _this instanceof Path ? _this : new Path();\n            return parser.parse(inst, d);\n        }\n    }\n}"],"sourceRoot":"/source/"}