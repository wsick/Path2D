{"version":3,"sources":["_version.ts","bounds/extenders/Arc.ts","bounds/extenders/LineTo.ts","bounds/extenders/ArcTo.ts","bounds/extenders/BezierCurveTo.ts","bounds/extenders/ClosePath.ts","bounds/extenders/Ellipse.ts","bounds/extenders/MoveTo.ts","bounds/extenders/QuadraticCurveTo.ts","bounds/ExtenderSelector.ts","bounds/fill/FillBounds.ts","IStrokeParameters.ts","bounds/stroke/extendEndCap.ts","bounds/stroke/extendLineJoin.ts","bounds/stroke/extendStartCap.ts","bounds/stroke/StartCapExtender.ts","bounds/stroke/StrokeBounds.ts","compiler/compile.ts","compiler/decompile.ts","compiler/ICompiledSegment.ts","ellipticalArc/fromEllipse.ts","ellipticalArc/radii.ts","ellipticalArc/toEllipse.ts","ISegmentExecutor.ts","parse/buffer/parser.ts","parse/dom/parser.ts","parse/ParseTypes.ts","parse/IParser.ts","parse/matching/parser.ts","Path.ts","polyfills/CanvasRenderingContext2D_ellipse.ts","polyfills/CanvasRenderingContext2D_setFillRule.ts","polyfills/TextEncoder.ts","serialize.ts"],"names":["curve","curve.bounds","curve.bounds.extenders","curve.bounds.extenders.Arc","curve.bounds.extenders.Arc.constructor","curve.bounds.extenders.Arc.init","curve.bounds.extenders.Arc.extendFillBox","curve.bounds.extenders.Arc.extendStrokeBox","curve.bounds.extenders.getStartVector","curve.bounds.extenders.getEndVector","curve.bounds.extenders.arcContainsPoint","curve.bounds.extenders.getCapSpread","curve.bounds.extenders.LineTo","curve.bounds.extenders.LineTo.constructor","curve.bounds.extenders.LineTo.init","curve.bounds.extenders.LineTo.extendFillBox","curve.bounds.extenders.LineTo.extendStrokeBox","curve.bounds.extenders.ArcTo","curve.bounds.extenders.ArcTo.constructor","curve.bounds.extenders.ArcTo.init","curve.bounds.extenders.ArcTo.extendFillBox","curve.bounds.extenders.ArcTo.extendStrokeBox","curve.bounds.extenders.createLine","curve.bounds.extenders.createArc","curve.bounds.extenders.getTangentPoint","curve.bounds.extenders.getPerpendicularIntersections","curve.bounds.extenders.BezierCurveTo","curve.bounds.extenders.BezierCurveTo.constructor","curve.bounds.extenders.BezierCurveTo.init","curve.bounds.extenders.BezierCurveTo.extendFillBox","curve.bounds.extenders.BezierCurveTo.extendStrokeBox","curve.bounds.extenders.getMaxima","curve.bounds.extenders.cod","curve.bounds.extenders.ClosePath","curve.bounds.extenders.ClosePath.constructor","curve.bounds.extenders.ClosePath.init","curve.bounds.extenders.ClosePath.extendFillBox","curve.bounds.extenders.ClosePath.extendStrokeBox","curve.bounds.extenders.Ellipse","curve.bounds.extenders.Ellipse.constructor","curve.bounds.extenders.Ellipse.init","curve.bounds.extenders.Ellipse.extendFillBox","curve.bounds.extenders.Ellipse.extendStrokeBox","curve.bounds.extenders.MoveTo","curve.bounds.extenders.MoveTo.constructor","curve.bounds.extenders.MoveTo.init","curve.bounds.extenders.MoveTo.extendFillBox","curve.bounds.extenders.MoveTo.extendStrokeBox","curve.bounds.extenders.QuadraticCurveTo","curve.bounds.extenders.QuadraticCurveTo.constructor","curve.bounds.extenders.QuadraticCurveTo.init","curve.bounds.extenders.QuadraticCurveTo.extendFillBox","curve.bounds.extenders.QuadraticCurveTo.extendStrokeBox","curve.bounds.ExtenderSelector","curve.bounds.ExtenderSelector.constructor","curve.bounds.ExtenderSelector.setFillRule","curve.bounds.ExtenderSelector.closePath","curve.bounds.ExtenderSelector.moveTo","curve.bounds.ExtenderSelector.lineTo","curve.bounds.ExtenderSelector.bezierCurveTo","curve.bounds.ExtenderSelector.quadraticCurveTo","curve.bounds.ExtenderSelector.arc","curve.bounds.ExtenderSelector.arcTo","curve.bounds.ExtenderSelector.ellipse","curve.bounds.fill","curve.bounds.fill.FillBounds","curve.bounds.fill.FillBounds.constructor","curve.bounds.fill.FillBounds.reset","curve.bounds.fill.FillBounds.ensure","curve.bounds.fill.FillBounds.calculate","curve.PenLineCap","curve.PenLineJoin","curve.bounds.stroke","curve.bounds.stroke.extendEndCap","curve.bounds.stroke.extendLineJoin","curve.bounds.stroke.findMiterTips","curve.bounds.stroke.findBevelTips","curve.bounds.stroke.extendStartCap","curve.bounds.stroke.StartCapExtender","curve.bounds.stroke.StartCapExtender.constructor","curve.bounds.stroke.StartCapExtender.extend","curve.bounds.stroke.StrokeBounds","curve.bounds.stroke.StrokeBounds.constructor","curve.bounds.stroke.StrokeBounds.reset","curve.bounds.stroke.StrokeBounds.ensure","curve.bounds.stroke.StrokeBounds.calculate","curve.compiler","curve.compiler.compile","curve.compiler.PathCompiler","curve.compiler.PathCompiler.constructor","curve.compiler.PathCompiler.setFillRule","curve.compiler.PathCompiler.closePath","curve.compiler.PathCompiler.moveTo","curve.compiler.PathCompiler.lineTo","curve.compiler.PathCompiler.bezierCurveTo","curve.compiler.PathCompiler.quadraticCurveTo","curve.compiler.PathCompiler.arc","curve.compiler.PathCompiler.arcTo","curve.compiler.PathCompiler.ellipse","curve.compiler.decompile","CompiledOpType","curve.ellipticalArc","curve.ellipticalArc.fromEllipse","curve.ellipticalArc.correctRadii","curve.ellipticalArc.toEllipse","curve.ellipticalArc.signAdjust","FillRule","SweepDirection","curve.parse","curve.parse.buffer","curve.parse.buffer.Parser","curve.parse.buffer.Parser.constructor","curve.parse.buffer.Parser.parse","curve.parse.buffer.parseNumber","curve.parse.buffer.toBuffer","curve.parse.buffer.isNaN","curve.parse.buffer.isInfinity","curve.parse.buffer.parseInteger","curve.parse.buffer.parseMantissa","curve.parse.buffer.parseSignificand","curve.parse.buffer.getSlice","curve.parse.dom","curve.parse.dom.Parser","curve.parse.dom.Parser.constructor","curve.parse.dom.Parser.parse","curve.parse.dom.parseSegment","curve.parse.dom.smoothCubic","curve.parse.dom.smoothQuadratic","curve.parse.ParseStyles","curve.parse.getParser","curve.parse.matching","curve.parse.matching.Parser","curve.parse.matching.Parser.constructor","curve.parse.matching.Parser.parse","curve.parse.matching.parse","curve.parse.matching.parse.go","curve.parse.matching.parse.parsePoint","curve.parse.matching.parse.parseDouble","curve.parse.matching.parse.advance","curve.parse.matching.parse.match","curve.parse.matching.parse.morePointsAvailable","curve.Path","curve.Path.constructor","curve.Path.isEmpty","curve.Path.reset","curve.Path.exec","curve.Path.draw","curve.Path.addPath","curve.Path.setFillRule","curve.Path.closePath","curve.Path.moveTo","curve.Path.lineTo","curve.Path.bezierCurveTo","curve.Path.quadraticCurveTo","curve.Path.arc","curve.Path.arcTo","curve.Path.ellipse","curve.Path.parse","constructor","encode","curve.serialize","curve.Serializer","curve.Serializer.constructor","curve.Serializer.setFillRule","curve.Serializer.closePath","curve.Serializer.moveTo","curve.Serializer.lineTo","curve.Serializer.bezierCurveTo","curve.Serializer.quadraticCurveTo","curve.Serializer.arc","curve.Serializer.arcTo","curve.Serializer.ellipse","curve.Serializer.prepend","curve.close","curve.round"],"mappings":"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CA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;wBAChCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACpCA,CAACA;oBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;wBAChCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACpCA,CAACA;oBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;wBAChCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACpCA,CAACA;oBAEDA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC/BA,CAACA;gBAEDH,uCAAeA,GAAfA,UAAgBA,GAAiBA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA,EAAEA,OAAwBA,EAAEA,IAAuBA;oBACrHI,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAC3BA,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAC3BA,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAC3BA,IAAIA,IAAIA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAC3BA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACxBA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACxBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,eAAeA,GAAGA,GAAGA,CAACA;oBAEpCA,IAAIA,CAACA,GAAGA,SAASA,CAACA,EAAEA,EAAEA,IAAIA,EAAEA,IAAIA,EAAEA,CAACA,EAAEA,EAAEA,EAAEA,IAAIA,EAAEA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oBACxDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;wBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACzCA,CAACA;oBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;wBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACzCA,CAACA;oBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;wBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACzCA,CAACA;oBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBACjBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;wBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACzCA,CAACA;oBAEDA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC/BA,CAACA;gBACLJ,oBAACA;YAADA,CAlFAxB,AAkFCwB,IAAAxB;YAlFYA,uBAAaA,gBAkFzBA,CAAAA;YAqBDA,mBAAmBA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,EAAUA;gBAC7G6B,MAAMA,CAACA;oBACHA,CAACA,EAAEA,GAAGA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,CAACA;oBACtBA,CAACA,EAAEA,GAAGA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,CAACA;iBACzBA,CAACA;YACNA,CAACA;YAED7B,aAAaA,CAASA,EAAEA,CAASA,EAAEA,CAASA,EAAEA,CAASA;gBACnD8B,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA;gBAC9BA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA;gBACdA,IAAIA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA;gBAC/BA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBAEtCA,IAAIA,IAAIA,GAAaA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;gBAClCA,EAAEA,CAACA,CAACA,KAAKA,CAACA,EAAEA,CAACA,CAACA;oBACVA,MAAMA,CAACA,IAAIA,CAACA;gBAEhBA,IAAIA,CAASA,EACTA,EAAUA,CAACA;gBAEfA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBACxBA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACnBA,EAAEA,GAAGA,CAACA,GAAGA,CAACA,CAACA;oBACXA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,GAAGA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBAClGA,CAACA;gBAEDA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBACxBA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACnBA,EAAEA,GAAGA,CAACA,GAAGA,CAACA,CAACA;oBACXA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,GAAGA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBAClGA,CAACA;gBAEDA,MAAMA,CAACA,IAAIA,CAACA;YAChBA,CAACA;QACL9B,CAACA,EA5IsBD,SAASA,GAATA,gBAASA,KAATA,gBAASA,QA4I/BA;IAADA,CAACA,EA5IeD,MAAMA,GAANA,YAAMA,KAANA,YAAMA,QA4IrBA;AAADA,CAACA,EA5IS,KAAK,KAAL,KAAK,QA4Id;AC5ID,IAAU,KAAK,CAkBd;AAlBD,WAAU,KAAK;IAACA,IAAAA,MAAMA,CAkBrBA;IAlBeA,WAAAA,MAAMA;QAACC,IAAAA,SAASA,CAkB/BA;QAlBsBA,WAAAA,SAASA,EAACA,CAACA;YAC9BC;gBAAA+B;oBACIC,WAAMA,GAAGA,KAAKA,CAACA;gBAenBA,CAACA;gBAbGD,wBAAIA,GAAJA;oBACIE,MAAMA,CAACA;wBACHA,QAAQA,EAAEA,SAASA;wBACnBA,WAAWA,EAAEA,SAASA;wBACtBA,SAASA,EAAEA,SAASA;qBACvBA,CAAAA;gBACLA,CAACA;gBAEDF,iCAAaA,GAAbA,UAAcA,GAAiBA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA,EAAEA,OAAwBA;gBAC9FG,CAACA;gBAEDH,mCAAeA,GAAfA,UAAgBA,GAAiBA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA,EAAEA,OAAwBA,EAAEA,IAAuBA;gBACzHI,CAACA;gBACLJ,gBAACA;YAADA,CAhBA/B,AAgBC+B,IAAA/B;YAhBYA,mBAASA,YAgBrBA,CAAAA;QACLA,CAACA,EAlBsBD,SAASA,GAATA,gBAASA,KAATA,gBAASA,QAkB/BA;IAADA,CAACA,EAlBeD,MAAMA,GAANA,YAAMA,KAANA,YAAMA,QAkBrBA;AAADA,CAACA,EAlBS,KAAK,KAAL,KAAK,QAkBd;AClBD,IAAU,KAAK,CAqFd;AArFD,WAAU,KAAK;IAACA,IAAAA,MAAMA,CAqFrBA;IArFeA,WAAAA,MAAMA;QAACC,IAAAA,SAASA,CAqF/BA;QArFsBA,WAAAA,SAASA,EAACA,CAACA;YAC9BC,IAAOA,IAAIA,GAAGA,EAAEA,CAACA,IAAIA,CAACA;YAMtBA;gBAAAoC;oBACIC,WAAMA,GAAGA,KAAKA,CAACA;gBA4EnBA,CAACA;gBA1EGD,sBAAIA,GAAJA,UAAKA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA;oBACpCE,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,GAAGA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAClBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAEjBA,IAAIA,IAAIA,GAAGA,EAAEA,CAACA,OAAOA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,CAACA,CAACA;oBAE3CA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,EAAEA,CAACA,CAACA;oBACxBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,EAAEA,CAACA,CAACA;oBAC1BA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,EAAEA,CAACA,CAACA;oBAC1BA,EAAEA,CAACA,CAACA,EAAEA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBACbA,IAAIA,CAACA,OAAOA,CAACA,EAAEA,CAACA,CAACA;wBACjBA,IAAIA,CAACA,OAAOA,CAACA,EAAEA,CAACA,CAACA;oBACrBA,CAACA;oBAEDA,MAAMA,CAACA;wBACHA,IAAIA,EAAEA,IAAIA;wBACVA,WAAWA,EAAEA,EAAEA;wBACfA,SAASA,EAAEA,EAAEA;wBACbA,QAAQA,EAAEA,EAAEA;qBACfA,CAACA;gBACNA,CAACA;gBAEDF,+BAAaA,GAAbA,UAAcA,GAA8BA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA,EAAEA,OAAwBA;oBACvGG,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,IAAIA,GAAGA,OAAOA,CAACA,IAAIA,CAACA;oBAExBA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,GAAGA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,CAACA,EAAEA,CAACA,GAAGA,GAAGA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;wBAClEA,IAAIA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;wBACfA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;4BACHA,QAAQA,CAACA;wBACbA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;wBACbA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;wBACbA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;wBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;wBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;wBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC/BA,CAACA;gBACLA,CAACA;gBAEDH,iCAAeA,GAAfA,UAAgBA,GAA8BA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA,EAAEA,OAAwBA,EAAEA,IAA6BA;oBACxII,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACjBA,IAAIA,IAAIA,GAAGA,OAAOA,CAACA,IAAIA,CAACA;oBACxBA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,eAAeA,GAAGA,GAAGA,CAACA;oBAEpCA,IAAIA,KAAuBA,IAAIA,CAACA,OAAOA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,CAACA,EAA9CA,GAAGA,UAAEA,GAAGA,UAAEA,GAAGA,UAAEA,GAAGA,QAA4BA,CAACA;oBAEpDA,EAAEA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;wBACNA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;wBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACzCA,CAACA;oBACDA,EAAEA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;wBACNA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;wBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACzCA,CAACA;oBAEDA,EAAEA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;wBACNA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;wBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACzCA,CAACA;oBACDA,EAAEA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;wBACNA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;wBACrCA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;oBACzCA,CAACA;gBACLA,CAACA;gBACLJ,cAACA;YAADA,CA7EApC,AA6ECoC,IAAApC;YA7EYA,iBAAOA,UA6EnBA,CAAAA;QACLA,CAACA,EArFsBD,SAASA,GAATA,gBAASA,KAATA,gBAASA,QAqF/BA;IAADA,CAACA,EArFeD,MAAMA,GAANA,YAAMA,KAANA,YAAMA,QAqFrBA;AAADA,CAACA,EArFS,KAAK,KAAL,KAAK,QAqFd;ACrFD,IAAU,KAAK,CA8Bd;AA9BD,WAAU,KAAK;IAACA,IAAAA,MAAMA,CA8BrBA;IA9BeA,WAAAA,MAAMA;QAACC,IAAAA,SAASA,CA8B/BA;QA9BsBA,WAAAA,SAASA,EAACA,CAACA;YAC9BC,IAAOA,IAAIA,GAAGA,EAAEA,CAACA,IAAIA,CAACA;YAEtBA;gBAAAyC;oBACIC,WAAMA,GAAGA,IAAIA,CAACA;gBAyBlBA,CAACA;gBAvBGD,qBAAIA,GAAJA,UAAKA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA;oBACpCE,IAAIA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAChBA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAEhBA,MAAMA,CAACA;wBACHA,WAAWA,EAAEA,IAAIA;wBACjBA,SAASA,EAAEA,IAAIA;wBACfA,QAAQA,EAAEA,IAAIA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,CAACA;qBAC9BA,CAACA;gBACNA,CAACA;gBAEDF,8BAAaA,GAAbA,UAAcA,GAAiBA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA,EAAEA,OAAwBA;oBAC1FG,IAAIA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAChBA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAChBA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC/BA,CAACA;gBAEDH,gCAAeA,GAAfA,UAAgBA,GAAiBA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA,EAAEA,OAAwBA,EAAEA,IAAuBA;oBACrHI,IAAIA,CAACA,aAAaA,CAACA,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,IAAIA,EAAEA,OAAOA,CAACA,CAACA;gBACnDA,CAACA;gBACLJ,aAACA;YAADA,CA1BAzC,AA0BCyC,IAAAzC;YA1BYA,gBAAMA,SA0BlBA,CAAAA;QACLA,CAACA,EA9BsBD,SAASA,GAATA,gBAASA,KAATA,gBAASA,QA8B/BA;IAADA,CAACA,EA9BeD,MAAMA,GAANA,YAAMA,KAANA,YAAMA,QA8BrBA;AAADA,CAACA,EA9BS,KAAK,KAAL,KAAK,QA8Bd;AC9BD,IAAU,KAAK,CAgGd;AAhGD,WAAU,KAAK;IAACA,IAAAA,MAAMA,CAgGrBA;IAhGeA,WAAAA,MAAMA;QAACC,IAAAA,SAASA,CAgG/BA;QAhGsBA,WAAAA,SAASA,EAACA,CAACA;YAC9BC,IAAOA,IAAIA,GAAGA,EAAEA,CAACA,IAAIA,CAACA;YAEtBA;gBAAA8C;oBACIC,WAAMA,GAAGA,KAAKA,CAACA;gBA2DnBA,CAACA;gBAzDGD,+BAAIA,GAAJA,UAAKA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA;oBACpCE,IAAIA,GAAGA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAC1BA,IAAIA,GAAGA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAC1BA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACxBA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAExBA,MAAMA,CAACA;wBACHA,QAAQA,EAAEA,IAAIA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,CAACA;wBAC3BA,WAAWA,EAAEA,IAAIA,CAACA,MAAMA,CAACA,CAACA,GAAGA,CAACA,GAAGA,GAAGA,EAAEA,CAACA,EAAEA,CAACA,GAAGA,CAACA,GAAGA,GAAGA,EAAEA,CAACA,CAACA;wBACxDA,SAASA,EAAEA,IAAIA,CAACA,MAAMA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA;qBACvDA,CAACA;gBACNA,CAACA;gBAEDF,wCAAaA,GAAbA,UAAcA,GAAiBA,EAAEA,EAAUA,EAAEA,EAAUA,EAAEA,IAAWA,EAAEA,OAAwBA;oBAC1FG,IAAIA,GAAGA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAC1BA,IAAIA,GAAGA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAC1BA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBACxBA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAExBA,IAAIA,CAACA,GAAGA,SAASA,CAACA,EAAEA,EAAEA,GAAGA,EAAEA,CAACA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,CAACA,CAACA,CAACA;oBAC1CA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBACdA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;wBAC7BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACjCA,CAACA;oBACDA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBACdA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;wBAC7BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACjCA,CAACA;oBAEDA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC3BA,GAAGA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,CAA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A,MAAMA,CAACA;YAChBA,EAAEA,CAACA,CAACA,CAACA,IAAIA,MAAMA,CAACA;YAIhBA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,EAAEA,CAACA,EAAEA,GAAGA,CAACA,CAACA;YACzCA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,EAAEA,GAAGA,EAAEA,CAACA,GAAGA,GAAGA,CAACA;YACxBA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,EAAEA,GAAGA,EAAEA,CAACA,GAAGA,GAAGA,CAACA;YAIxBA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YAC1BA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;YAChEA,IAAIA,EAAEA,GAAGA,IAAIA,CAACA,YAAYA,CAACA,CAACA,EAAEA,CAACA,CAACA,GAAGA,UAAUA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YACpDA,EAAEA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACTA,EAAEA,IAAIA,GAAGA,CAACA;YACdA,CAACA;YAIDA,CAACA,GAAGA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,EAAEA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA;YAC9DA,IAAIA,EAAEA,GAAGA,CAACA,IAAIA,CAACA,YAAYA,CAACA,CAACA,EAAEA,CAACA,CAACA,GAAGA,UAAUA,CAACA,CAACA,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,GAAGA,CAACA,CAACA,CAACA,IAAIA,KAAKA,CAACA,CAACA,CAACA;wBAClBA,GAAGA,CAACA,CAACA,CAACA,IAAIA,KAAKA,CAACA,CAACA,CAACA;wBAClBA,MAAMA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;wBAC9BA,KAAKA,CAACA;oBACVA,KAAKA,UAAUA,CAACA,2BAA2BA;wBACvCA,IAAIA,KAAKA,GAAgCA,OAAOA,CAACA;wBACjDA,GAAGA,CAACA,CAACA,CAACA,GAAGA,KAAKA,CAACA,CAACA,CAACA;wBACjBA,MAAMA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;wBAC9BA,KAAKA,CAACA;oBACVA,KAAKA,UAAUA,CAACA,2BAA2BA;wBACvCA,IAAIA,KAAKA,GAAgCA,OAAOA,CAACA;wBACjDA,GAAGA,CAACA,CAACA,CAACA,IAAIA,KAAKA,CAACA,CAACA,CAACA;wBAClBA,MAAMA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;wBAC9BA,KAAKA,CAACA;oBACVA,KAAKA,UAAUA,CAACA,kBAAkBA;wBAC9BA,IAAIA,KAAKA,GAAwBA,OAAOA,CAACA;wBACzCA,GAAGA,CAACA,CAACA,CAACA,GAAGA,KAAKA,CAACA,CAACA,CAACA;wBACjBA,GAAGA,CAACA,CAACA,CAACA,GAAGA,KAAKA,CAACA,CAACA,CAACA;wBACjBA,MAAMA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;wBAC9BA,KAAKA,CAACA;oBACVA,KAAKA,UAAUA,CAACA,kBAAkBA;wBAC9BA,IAAIA,KAAKA,GAAwBA,OAAOA,CAACA;wBACzCA,GAAGA,CAACA,CAACA,CAACA,IAAIA,KAAKA,CAACA,CAACA,CAACA;wBAClBA,GAAGA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CAACA;gCACzCA,IAAIA;oCACAA,MAAMA,CAACA,IAAIA,CAACA;gCAChBA,KAAKA,EAAEA,CAACA;gCACRA,CAACA,GAAGA,GAAGA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA;gCACtBA,KAAKA,CAACA;4BACVA,KAAKA,GAAGA;gCACJA,QAAQA,GAAGA,IAAIA,CAACA;4BACpBA,KAAKA,GAAGA;gCACJA,GAAGA,GAAGA,UAAUA,EAAEA,CAACA;gCACnBA,EAAEA,CAACA,CAACA,GAAGA,IAAIA,IAAIA,CAACA;oCACZA,KAAKA,CAACA;gCACVA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;oCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;gCAClBA,CAACA;gCACDA,MAAMA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;gCAC5BA,KAAKA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACvBA,KAAKA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACvBA,OAAOA,EAAEA,CAACA;gCACVA,OAAOA,mBAAmBA,EAAEA,EAAEA,CAACA;oCAC3BA,EAAEA,CAACA,CAACA,CAACA,GAAGA,GAAGA,UAAUA,EAAEA,CAACA,IAAIA,IAAIA,CAACA;wCAC7BA,KAAKA,CAACA;oCACVA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;wCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCAClBA,CAACA;oCACDA,MAAMA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;gCAChCA,CAACA;gCACDA,EAAE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A;wCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;wCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCAClBA,CAACA;oCACDA,OAAOA,EAAEA,CAACA;oCACVA,EAAEA,CAACA,CAACA,CAACA,GAAGA,GAAGA,UAAUA,EAAEA,CAACA,IAAIA,IAAIA,CAACA;wCAC7BA,KAAKA,CAACA;oCACVA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;wCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCAClBA,CAACA;oCACDA,OAAOA,EAAEA,CAACA;oCAEVA,MAAMA,CAACA,aAAaA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oCAE/DA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;oCACdA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCAClBA,CAACA;gCACDA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACbA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACbA,GAAGA,GAAGA,IAAIA,CAACA;gCACXA,IAAIA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACfA,IAAIA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACfA,GAAGA,GAAGA,KAAKA,CAACA;gCACZA,KAAKA,CAACA;4BACVA,KAAKA,GAAGA;gCACJA,QAAQA,GAAGA,IAAIA,CAACA;4BACpBA,KAAKA,GAAGA;gCACJA,OAAOA,mBAAmBA,EAAEA,EAAEA,CAACA;oCAC3BA,EAAEA,CAACA,CAACA,CAACA,GAAGA,GAAGA,UAAUA,EAAEA,CAACA,IAAIA,IAAIA,CAACA;wCAC7BA,KAAKA,CAACA;oCACVA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;wCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCAClBA,CAACA;oCACDA,OAAOA,EAAEA,CAACA;oCACVA,EAAEA,CAACA,CAACA,CAACA,GAAGA,GAAGA,UAAUA,EAAEA,CAACA,IAAIA,IAAIA,CAACA;wCAC7BA,KAAKA,CAACA;oCACVA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;wCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCAClBA,CAACA;oCAEDA,EAAEA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;wCACNA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA;wCAC1BA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA;oCAC9BA,CAACA;oCAACA,IAAIA;wCACFA,GAAGA,GAAGA,EAAEA,CAACA;oCAEbA,MAAMA,CAACA,aAAaA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oCAE/DA,GAAGA,GAAGA,IAAIA,CAACA;oCACXA,IAAIA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;oCACfA,IAAIA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;oCAEfA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;oCACbA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;oCAEbA,OAAOA,EAAEA,CAACA;gCACdA,CAACA;gCACDA,GAAGA,GAAGA,KAAKA,CAACA;gCACZA,KAAKA,CAACA;4BACVA,KAAKA,GAAGA;gCACJA,QAAQA,GAAGA,IAAIA,CAACA;4BACpBA,KAAKA,GAAGA;gCACJA,OAAOA,mBAAmBA,EAAEA,EAAEA,CAACA;oCAC3BA,EAAEA,CAACA,CAACA,CAACA,GAAGA,GAAGA,UAAUA,EAAEA,CAACA,IAAIA,IAAIA,CAACA;wCAC7BA,KAAKA,CAACA;oCACVA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;wCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCAClBA,CAACA;oCACDA,OAAOA,EAAEA,CAACA;oCACVA,EAAEA,CAACA,CAACA,CAACA,GAAGA,GAAGA,UAAUA,EAAEA,CAACA,IAAIA,IAAIA,CAACA;wCAC7BA,KAAKA,CAACA;oCACVA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;wCACXA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;wCACdA,GAAGA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;oCAClBA,CAACA;oCACDA,OAAOA,EAAEA,CAACA;oCAEVA,MAAMA,CAACA,gBAAgBA,CAACA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oCAEpDA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;oCACbA,EAAEA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACjBA,CAACA;gCACDA,GAAGA,GAAGA,IAAIA,CAACA;gCACXA,IAAIA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA;gCACf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","file":"curve.js","sourcesContent":["namespace curve {\n    export var version = '0.1.4';\n}","namespace curve.bounds.extenders {\n    import vec2 = la.vec2;\n\n    export interface IArcMetrics extends ISegmentMetrics {\n        sx: number;\n        sy: number;\n        l: number;\n        cl: boolean;\n        r: number;\n        cr: boolean;\n        t: number;\n        ct: boolean;\n        b: number;\n        cb: boolean;\n    }\n\n    export class Arc implements IBoundsExtender {\n        isMove = false;\n\n        init(sx: number, sy: number, args: any[]): IArcMetrics {\n            var x = args[0];\n            var y = args[1];\n            var radius = args[2];\n            var sa = args[3];\n            var ea = args[4];\n            var cc = args[5];\n\n            sx = x + (radius * Math.cos(sa));\n            sy = y + (radius * Math.sin(sa));\n            var ex = x + (radius * Math.cos(ea));\n            var ey = y + (radius * Math.sin(ea));\n\n            var l = x - radius;\n            var cl = arcContainsPoint(sx, sy, ex, ey, l, y, cc);\n\n            var r = x + radius;\n            var cr = arcContainsPoint(sx, sy, ex, ey, r, y, cc);\n\n            var t = y - radius;\n            var ct = arcContainsPoint(sx, sy, ex, ey, x, t, cc);\n\n            var b = y + radius;\n            var cb = arcContainsPoint(sx, sy, ex, ey, x, b, cc);\n\n            return {\n                sx: sx,\n                sy: sy,\n                l: l,\n                cl: cl,\n                r: r,\n                cr: cr,\n                t: t,\n                ct: ct,\n                b: b,\n                cb: cb,\n                endPoint: vec2.create(ex, ey),\n                startVector: getStartVector(x, y, cc, sx, sy),\n                endVector: getEndVector(x, y, cc, ex, ey)\n            };\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: IArcMetrics) {\n            var sa = args[3];\n            var ea = args[4];\n            if (ea === sa)\n                return;\n\n            var ep = metrics.endPoint,\n                ex = ep[0],\n                ey = ep[1];\n            box.l = Math.min(box.l, sx, ex);\n            box.r = Math.max(box.r, sx, ex);\n            box.t = Math.min(box.t, sy, ey);\n            box.b = Math.max(box.b, sy, ey);\n\n            if (metrics.cl)\n                box.l = Math.min(box.l, metrics.l);\n            if (metrics.cr)\n                box.r = Math.max(box.r, metrics.r);\n            if (metrics.ct)\n                box.t = Math.min(box.t, metrics.t);\n            if (metrics.cb)\n                box.b = Math.max(box.b, metrics.b);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: IArcMetrics, pars: IStrokeParameters) {\n            var sa = args[3];\n            var ea = args[4];\n            if (ea === sa)\n                return;\n\n            var ep = metrics.endPoint,\n                ex = ep[0],\n                ey = ep[1];\n            box.l = Math.min(box.l, sx, ex);\n            box.r = Math.max(box.r, sx, ex);\n            box.t = Math.min(box.t, sy, ey);\n            box.b = Math.max(box.b, sy, ey);\n\n            var hs = pars.strokeThickness / 2.0;\n            if (metrics.cl)\n                box.l = Math.min(box.l, metrics.l - hs);\n            if (metrics.cr)\n                box.r = Math.max(box.r, metrics.r + hs);\n            if (metrics.ct)\n                box.t = Math.min(box.t, metrics.t - hs);\n            if (metrics.cb)\n                box.b = Math.max(box.b, metrics.b + hs);\n\n            var cap = pars.strokeStartLineCap || pars.strokeEndLineCap || 0; //HTML5 doesn't support start and end cap\n            var sv = vec2.reverse(vec2.clone(metrics.startVector));\n            var ss = getCapSpread(sx, sy, pars.strokeThickness, cap, sv);\n            var es = getCapSpread(ex, ey, pars.strokeThickness, cap, metrics.endVector);\n\n            box.l = Math.min(box.l, ss.x1, ss.x2, es.x1, es.x2);\n            box.r = Math.max(box.r, ss.x1, ss.x2, es.x1, es.x2);\n            box.t = Math.min(box.t, ss.y1, ss.y2, es.y1, es.y2);\n            box.b = Math.max(box.b, ss.y1, ss.y2, es.y1, es.y2);\n        }\n    }\n\n    function getStartVector(x: number, y: number, cc: number, sx: number, sy: number): Float32Array {\n        var rx = sx - x,\n            ry = sy - y;\n        if (cc)\n            return vec2.create(ry, -rx);\n        return vec2.create(-ry, rx);\n    }\n\n    function getEndVector(x: number, y: number, cc: number, ex: number, ey: number): Float32Array {\n        var rx = ex - x,\n            ry = ey - y;\n        if (cc)\n            return vec2.create(ry, -rx);\n        return vec2.create(-ry, rx);\n    }\n\n    function arcContainsPoint(sx: number, sy: number, ex: number, ey: number, cpx: number, cpy: number, cc: boolean): boolean {\n        // var a = ex - sx;\n        // var b = cpx - sx;\n        // var c = ey - sy;\n        // var d = cpy - sy;\n        // det = ad - bc;\n        var n = (ex - sx) * (cpy - sy) - (cpx - sx) * (ey - sy);\n        if (n === 0)\n            return true;\n        if (n > 0 && cc)\n            return true;\n        if (n < 0 && !cc)\n            return true;\n        return false;\n    }\n\n    function getCapSpread(x: number, y: number, thickness: number, cap: PenLineCap, vector: Float32Array) {\n        var hs = thickness / 2.0;\n        switch (cap) {\n            case PenLineCap.Round:\n                return {\n                    x1: x - hs,\n                    x2: x + hs,\n                    y1: y - hs,\n                    y2: y + hs\n                };\n                break;\n            case PenLineCap.Square:\n                var ed = vec2.normalize(vec2.clone(vector));\n                var edo = vec2.orthogonal(vec2.clone(ed));\n                return {\n                    x1: x + hs * (ed[0] + edo[0]),\n                    x2: x + hs * (ed[0] - edo[0]),\n                    y1: y + hs * (ed[1] + edo[1]),\n                    y2: y + hs * (ed[1] - edo[1])\n                };\n                break;\n            case PenLineCap.Flat:\n            default:\n                var edo = vec2.orthogonal(vec2.normalize(vec2.clone(vector)));\n                return {\n                    x1: x + hs * edo[0],\n                    x2: x + hs * -edo[0],\n                    y1: y + hs * edo[1],\n                    y2: y + hs * -edo[1]\n                };\n                break;\n        }\n    }\n}","namespace curve.bounds.extenders {\n    import vec2 = la.vec2;\n\n    export class LineTo implements IBoundsExtender {\n        isMove = false;\n\n        init(sx: number, sy: number, args: any[]): ISegmentMetrics {\n            var x = args[0];\n            var y = args[1];\n\n            return {\n                startVector: vec2.create(x - sx, y - sy),\n                endVector: vec2.create(x - sx, y - sy),\n                endPoint: vec2.create(x, y)\n            };\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: ISegmentMetrics) {\n            var x = args[0];\n            var y = args[1];\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: ISegmentMetrics, pars: IStrokeParameters) {\n            this.extendFillBox(box, sx, sy, args, metrics);\n        }\n    }\n}","/// <reference path=\"LineTo\" />\n/// <reference path=\"Arc\" />\n\nnamespace curve.bounds.extenders {\n    import vec2 = la.vec2;\n\n    export interface IArcToMetrics extends ISegmentMetrics {\n        line: {\n            args: any[];\n            metrics: ISegmentMetrics;\n        };\n        arc: {\n            args: any[];\n            metrics: IArcMetrics;\n        };\n    }\n\n    var _arc = new Arc();\n    var _lineTo = new LineTo();\n\n    export class ArcTo implements IBoundsExtender {\n        isMove = false;\n\n        init(sx: number, sy: number, args: any[]): IArcToMetrics {\n            var x1: number = args[0];\n            var y1: number = args[1];\n            var x2: number = args[2];\n            var y2: number = args[3];\n            var radius: number = args[4];\n\n            var v1 = vec2.create(x1 - sx, y1 - sy);\n            var v2 = vec2.create(x2 - x1, y2 - y1);\n            var inner_theta = Math.PI - vec2.angleBetween(v1, v2);\n            //find 2 points tangent to imaginary circle along guide lines\n            var a = getTangentPoint(inner_theta, radius, vec2.create(sx, sy), v1, true);\n            var b = getTangentPoint(inner_theta, radius, vec2.create(x1, y1), v2, false);\n\n            var line = createLine(sx, sy, a[0], a[1]);\n            var arc = createArc(a, v1, b, v2, radius);\n\n            return {\n                line: line,\n                arc: arc,\n                startVector: line.metrics.startVector,\n                endVector: arc.metrics.endVector,\n                endPoint: arc.metrics.endPoint\n            };\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: IArcToMetrics) {\n            _lineTo.extendFillBox(box, sx, sy, metrics.line.args, metrics.line.metrics);\n            var ep = metrics.line.metrics.endPoint;\n            _arc.extendFillBox(box, ep[0], ep[1], metrics.arc.args, metrics.arc.metrics);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: IArcToMetrics, pars: IStrokeParameters) {\n            _lineTo.extendStrokeBox(box, sx, sy, metrics.line.args, metrics.line.metrics, pars);\n            var ep = metrics.line.metrics.endPoint;\n            _arc.extendStrokeBox(box, ep[0], ep[1], metrics.arc.args, metrics.arc.metrics, pars);\n        }\n    }\n\n    function createLine(sx: number, sy: number, x: number, y: number) {\n        var args = [x, y];\n        return {\n            args: args,\n            metrics: _lineTo.init(sx, sy, args)\n        };\n    }\n\n    function createArc(a: Float32Array, v1: Float32Array, b: Float32Array, v2: Float32Array, radius: number) {\n        //find center point\n        var c = getPerpendicularIntersections(a, v1, b, v2);\n        //counter clockwise test\n        var cc = !la.vec2.isClockwiseTo(v1, v2);\n        //find starting angle -- [1,0] is origin direction of 0rad\n        var sa = Math.atan2(a[1] - c[1], a[0] - c[0]);\n        if (sa < 0)\n            sa = (2 * Math.PI) + sa;\n        var ea = Math.atan2(b[1] - c[1], b[0] - c[0]);\n        if (ea < 0)\n            ea = (2 * Math.PI) + ea;\n        var args = [c[0], c[1], radius, sa, ea, cc];\n\n        return {\n            args: args,\n            metrics: _arc.init(a[0], a[1], args)\n        };\n    }\n\n    function getTangentPoint(theta: number, radius: number, s: Float32Array, d: Float32Array, invert: boolean): Float32Array {\n        var len = Math.sqrt(d[0] * d[0] + d[1] * d[1]);\n        var f = radius / Math.tan(theta / 2);\n        var t = f / len;\n        if (invert)\n            t = 1 - t;\n        return la.vec2.create(s[0] + t * d[0], s[1] + t * d[1]);\n    }\n\n    function getPerpendicularIntersections(s1: Float32Array, d1: Float32Array, s2: Float32Array, d2: Float32Array): Float32Array {\n        var p1 = vec2.orthogonal(vec2.clone(d1));\n        var p2 = vec2.orthogonal(vec2.clone(d2));\n        return vec2.intersection(s1, p1, s2, p2);\n    }\n}","namespace curve.bounds.extenders {\n    import vec2 = la.vec2;\n\n    export class BezierCurveTo implements IBoundsExtender {\n        isMove = false;\n\n        init(sx: number, sy: number, args: any[]): ISegmentMetrics {\n            var cp1x: number = args[0];\n            var cp1y: number = args[1];\n            var cp2x: number = args[2];\n            var cp2y: number = args[3];\n            var x: number = args[4];\n            var y: number = args[5];\n\n            return {\n                endPoint: vec2.create(x, y),\n                startVector: vec2.create(3 * (cp1x - sx), 3 * (cp1y - sy)), // [F(0)'x, F(0)'y]\n                endVector: vec2.create(3 * (x - cp2x), 3 * (y - cp2y))      // [F(1)'x, F(1)'y]\n            };\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: ISegmentMetrics) {\n            var cp1x: number = args[0];\n            var cp1y: number = args[1];\n            var cp2x: number = args[2];\n            var cp2y: number = args[3];\n            var x: number = args[4];\n            var y: number = args[5];\n\n            var m = getMaxima(sx, cp1x, cp2x, x, sy, cp1y, cp2y, y);\n            if (m.x[0] != null) {\n                box.l = Math.min(box.l, m.x[0]);\n                box.r = Math.max(box.r, m.x[0]);\n            }\n            if (m.x[1] != null) {\n                box.l = Math.min(box.l, m.x[1]);\n                box.r = Math.max(box.r, m.x[1]);\n            }\n            if (m.y[0] != null) {\n                box.t = Math.min(box.t, m.y[0]);\n                box.b = Math.max(box.b, m.y[0]);\n            }\n            if (m.y[1] != null) {\n                box.t = Math.min(box.t, m.y[1]);\n                box.b = Math.max(box.b, m.y[1]);\n            }\n\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: ISegmentMetrics, pars: IStrokeParameters) {\n            var cp1x: number = args[0];\n            var cp1y: number = args[1];\n            var cp2x: number = args[2];\n            var cp2y: number = args[3];\n            var x: number = args[4];\n            var y: number = args[5];\n            var hs = pars.strokeThickness / 2.0;\n\n            var m = getMaxima(sx, cp1x, cp2x, x, sy, cp1y, cp2y, y);\n            if (m.x[0] != null) {\n                box.l = Math.min(box.l, m.x[0] - hs);\n                box.r = Math.max(box.r, m.x[0] + hs);\n            }\n            if (m.x[1] != null) {\n                box.l = Math.min(box.l, m.x[1] - hs);\n                box.r = Math.max(box.r, m.x[1] + hs);\n            }\n            if (m.y[0] != null) {\n                box.t = Math.min(box.t, m.y[0] - hs);\n                box.b = Math.max(box.b, m.y[0] + hs);\n            }\n            if (m.y[1] != null) {\n                box.t = Math.min(box.t, m.y[1] - hs);\n                box.b = Math.max(box.b, m.y[1] + hs);\n            }\n\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n    }\n\n    //http://pomax.nihongoresources.com/pages/bezier/\n    /* Cubic Bezier curve is defined by parameteric curve:\n     * F(t)x =\n     * F(t)y =\n     * where\n     *  s = start point\n     *  cp1 = control point 1\n     *  cp2 = control point 2\n     *  e = end point\n     *\n     * We find the coordinates (4) where F(t)x/dt = 0, F(t)y/dt = 0\n     * (within the constraints of the curve (0 <= t <= 1)\n     * These points will expand the bounding box\n     */\n\n    interface IMaxima {\n        x: number[];\n        y: number[];\n    }\n    function getMaxima(x1: number, x2: number, x3: number, x4: number, y1: number, y2: number, y3: number, y4: number): IMaxima {\n        return {\n            x: cod(x1, x2, x3, x4),\n            y: cod(y1, y2, y3, y4)\n        };\n    }\n\n    function cod(a: number, b: number, c: number, d: number): number[] {\n        var u = 2 * a - 4 * b + 2 * c;\n        var v = b - a;\n        var w = -a + 3 * b + d - 3 * c;\n        var rt = Math.sqrt(u * u - 4 * v * w);\n\n        var cods: number[] = [null, null];\n        if (isNaN(rt))\n            return cods;\n\n        var t: number,\n            ot: number;\n\n        t = (-u + rt) / (2 * w);\n        if (t >= 0 && t <= 1) {\n            ot = 1 - t;\n            cods[0] = (a * ot * ot * ot) + (3 * b * t * ot * ot) + (3 * c * ot * t * t) + (d * t * t * t);\n        }\n\n        t = (-u - rt) / (2 * w);\n        if (t >= 0 && t <= 1) {\n            ot = 1 - t;\n            cods[1] = (a * ot * ot * ot) + (3 * b * t * ot * ot) + (3 * c * ot * t * t) + (d * t * t * t);\n        }\n\n        return cods;\n    }\n}","namespace curve.bounds.extenders {\n    export class ClosePath implements IBoundsExtender {\n        isMove = false;\n\n        init(): ISegmentMetrics {\n            return {\n                endPoint: undefined,\n                startVector: undefined,\n                endVector: undefined\n            }\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: ISegmentMetrics) {\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: ISegmentMetrics, pars: IStrokeParameters) {\n        }\n    }\n}","namespace curve.bounds.extenders {\n    import vec2 = la.vec2;\n\n    export interface IEllipseMetrics extends ISegmentMetrics {\n        util: la.IEllipse;\n    }\n\n    export class Ellipse implements IBoundsExtender {\n        isMove = false;\n\n        init(sx: number, sy: number, args: any[]): IEllipseMetrics {\n            var cx = args[0];\n            var cy = args[1];\n            var rx = args[2];\n            var ry = args[3];\n            var phi = args[4];\n            var sa = args[5];\n            var ea = args[6];\n            var ac = args[7];\n\n            var util = la.ellipse(cx, cy, rx, ry, phi);\n\n            var ep = util.point(ea);\n            var sv = util.tangent(sa);\n            var ev = util.tangent(ea);\n            if (ac == true) {\n                vec2.reverse(sv);\n                vec2.reverse(ev);\n            }\n\n            return {\n                util: util,\n                startVector: sv,\n                endVector: ev,\n                endPoint: ep\n            };\n        }\n\n        extendFillBox(box: curve.bounds.IBoundingBox, sx: number, sy: number, args: any[], metrics: IEllipseMetrics) {\n            var sa = args[5];\n            var ea = args[6];\n            var ac = args[7];\n            var util = metrics.util;\n\n            for (var i = 0, ext = util.extrema(sa, ea, ac); i < ext.length; i++) {\n                let p = ext[i];\n                if (!p)\n                    continue;\n                let x = p[0];\n                let y = p[1];\n                box.l = Math.min(box.l, x);\n                box.r = Math.max(box.r, x);\n                box.t = Math.min(box.t, y);\n                box.b = Math.max(box.b, y);\n            }\n        }\n\n        extendStrokeBox(box: curve.bounds.IBoundingBox, sx: number, sy: number, args: any[], metrics: IEllipseMetrics, pars: curve.IStrokeParameters) {\n            var sa = args[5];\n            var ea = args[6];\n            var ac = args[7];\n            var util = metrics.util;\n            var hs = pars.strokeThickness / 2.0;\n\n            var [vp1, vp2, hp1, hp2] = util.extrema(sa, ea, ac);\n\n            if (vp1) {\n                box.l = Math.min(box.l, vp1[0] - hs);\n                box.r = Math.max(box.r, vp1[0] + hs);\n            }\n            if (vp2) {\n                box.l = Math.min(box.l, vp2[0] - hs);\n                box.r = Math.max(box.r, vp2[0] + hs);\n            }\n\n            if (hp1) {\n                box.t = Math.min(box.t, hp1[1] - hs);\n                box.b = Math.max(box.b, hp1[1] + hs);\n            }\n            if (hp2) {\n                box.t = Math.min(box.t, hp2[1] - hs);\n                box.b = Math.max(box.b, hp2[1] + hs);\n            }\n        }\n    }\n}\n","namespace curve.bounds.extenders {\n    import vec2 = la.vec2;\n\n    export class MoveTo implements IBoundsExtender {\n        isMove = true;\n\n        init(sx: number, sy: number, args: any[]): ISegmentMetrics {\n            var x = args[0];\n            var y = args[1];\n\n            return {\n                startVector: null,\n                endVector: null,\n                endPoint: vec2.create(x, y)\n            };\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: ISegmentMetrics) {\n            var x = args[0];\n            var y = args[1];\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: ISegmentMetrics, pars: IStrokeParameters) {\n            this.extendFillBox(box, sx, sy, args, metrics);\n        }\n    }\n}","namespace curve.bounds.extenders {\n    import vec2 = la.vec2;\n\n    export class QuadraticCurveTo implements IBoundsExtender {\n        isMove = false;\n\n        init(sx: number, sy: number, args: any[]): ISegmentMetrics {\n            var cpx: number = args[0];\n            var cpy: number = args[1];\n            var x: number = args[2];\n            var y: number = args[3];\n\n            return {\n                endPoint: vec2.create(x, y),\n                startVector: vec2.create(2 * (cpx - sx), 2 * (cpy - sy)),   // [F(0)'x, F(0)'y]\n                endVector: vec2.create(2 * (x - cpx), 2 * (y - cpy))        // [F(1)'x, F(1)'y]\n            };\n        }\n\n        extendFillBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: ISegmentMetrics) {\n            var cpx: number = args[0];\n            var cpy: number = args[1];\n            var x: number = args[2];\n            var y: number = args[3];\n\n            var m = getMaxima(sx, cpx, x, sy, cpy, y);\n            if (m.x != null) {\n                box.l = Math.min(box.l, m.x);\n                box.r = Math.max(box.r, m.x);\n            }\n            if (m.y != null) {\n                box.t = Math.min(box.t, m.y);\n                box.b = Math.max(box.b, m.y);\n            }\n\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n\n        extendStrokeBox(box: IBoundingBox, sx: number, sy: number, args: any[], metrics: ISegmentMetrics, pars: IStrokeParameters) {\n            var cpx: number = args[0];\n            var cpy: number = args[1];\n            var x: number = args[2];\n            var y: number = args[3];\n            var hs = pars.strokeThickness / 2.0;\n\n            var m = getMaxima(sx, cpx, x, sy, cpy, y);\n            if (m.x) {\n                box.l = Math.min(box.l, m.x - hs);\n                box.r = Math.max(box.r, m.x + hs);\n            }\n            if (m.y) {\n                box.t = Math.min(box.t, m.y - hs);\n                box.b = Math.max(box.b, m.y + hs);\n            }\n\n            box.l = Math.min(box.l, x);\n            box.r = Math.max(box.r, x);\n            box.t = Math.min(box.t, y);\n            box.b = Math.max(box.b, y);\n        }\n    }\n\n    //http://pomax.nihongoresources.com/pages/bezier/\n    /* Quadratic Bezier curve is defined by parametric curve:\n     *  F(t)x = s.x(1-t)^2 + cp.x(1-t)t + e.x(t^2)\n     *  F(t)x = s.y(1-t)^2 + cp.y(1-t)t + e.y(t^2)\n     * where\n     *  s = start point\n     *  cp = control point\n     *  e = end point\n     *\n     * We find the coordinates (2) where F(t)x/dt = 0, F(t)y/dt = 0\n     * (within the constraints of the curve (0 <= t <= 1)\n     * These points will expand the bounding box\n     */\n\n    interface IMaxima {\n        x: number;\n        y: number;\n    }\n    function getMaxima(x1: number, x2: number, x3: number, y1: number, y2: number, y3: number): IMaxima {\n        return {\n            x: cod(x1, x2, x3),\n            y: cod(y1, y2, y3)\n        };\n    }\n\n    function cod(a: number, b: number, c: number): number {\n        var t = (a - b) / (a - 2 * b + c);\n        if (t < 0 || t > 1)\n            return null;\n        return (a * Math.pow(1 - t, 2)) + (2 * b * (1 - t) * t) + (c * Math.pow(t, 2));\n    }\n}","/// <reference path=\"extenders/Arc\" />\n/// <reference path=\"extenders/ArcTo\" />\n/// <reference path=\"extenders/BezierCurveTo\" />\n/// <reference path=\"extenders/ClosePath\" />\n/// <reference path=\"extenders/Ellipse\" />\n/// <reference path=\"extenders/LineTo\" />\n/// <reference path=\"extenders/MoveTo\" />\n/// <reference path=\"extenders/QuadraticCurveTo\" />\n\nnamespace curve.bounds {\n    var arc = new extenders.Arc();\n    var arcTo = new extenders.ArcTo();\n    var bezierCurveTo = new extenders.BezierCurveTo();\n    var closePath = new extenders.ClosePath();\n    var ellipse = new extenders.Ellipse();\n    var lineTo = new extenders.LineTo();\n    var moveTo = new extenders.MoveTo();\n    var quadraticCurveTo = new extenders.QuadraticCurveTo();\n\n    export class ExtenderSelector implements ISegmentRunner {\n        current: extenders.IBoundsExtender;\n        args: any[];\n\n        setFillRule(fillRule: FillRule) {\n            //TODO: Does fill rule affect bounds?\n        }\n\n        closePath() {\n            this.current = closePath;\n            this.args = <any[]><any>arguments;\n        }\n\n        moveTo(x: number, y: number) {\n            this.current = moveTo;\n            this.args = <any[]><any>arguments;\n        }\n\n        lineTo(x: number, y: number) {\n            this.current = lineTo;\n            this.args = <any[]><any>arguments;\n        }\n\n        bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number) {\n            this.current = bezierCurveTo;\n            this.args = <any[]><any>arguments;\n        }\n\n        quadraticCurveTo(cpx: number, cpy: number, x: number, y: number) {\n            this.current = quadraticCurveTo;\n            this.args = <any[]><any>arguments;\n        }\n\n        arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean) {\n            this.current = arc;\n            this.args = <any[]><any>arguments;\n        }\n\n        arcTo(x1: number, y1: number, x2: number, y2: number, radius: number) {\n            this.current = arcTo;\n            this.args = <any[]><any>arguments;\n        }\n\n        ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, antiClockwise?: boolean) {\n            this.current = ellipse;\n            this.args = <any[]><any>arguments;\n        }\n    }\n}","namespace curve.bounds.fill {\n    export class FillBounds implements IBoundingBox {\n        path: Path;\n        l: number = 0;\n        t: number = 0;\n        r: number = 0;\n        b: number = 0;\n\n        private $calc = false;\n\n        constructor(path: Path) {\n            Object.defineProperties(this, {\n                \"path\": {value: path, writable: false}\n            });\n        }\n\n        reset() {\n            this.$calc = false;\n            this.l = this.t = this.r = this.b = 0;\n        }\n\n        ensure(): this {\n            if (!this.$calc)\n                this.calculate();\n            return this;\n        }\n\n        calculate(): this {\n            this.$calc = false;\n            this.l = Number.POSITIVE_INFINITY;\n            this.t = Number.POSITIVE_INFINITY;\n            this.r = Number.NEGATIVE_INFINITY;\n            this.b = Number.NEGATIVE_INFINITY;\n\n            var sx: number,\n                sy: number;\n            var selector = new ExtenderSelector();\n            this.path.exec(selector, () => {\n                var cur = selector.current;\n                var metrics = cur.init(sx, sy, selector.args);\n\n                cur.extendFillBox(this, sx, sy, selector.args, metrics);\n\n                sx = metrics.endPoint[0];\n                sy = metrics.endPoint[1];\n            });\n\n            this.$calc = true;\n            return this;\n        }\n    }\n}","namespace curve {\n    export enum PenLineCap {\n        Flat = 0,\n        Square = 1,\n        Round = 2,\n        Triangle = 3,\n    }\n\n    export enum PenLineJoin {\n        Miter = 0,\n        Bevel = 1,\n        Round = 2,\n    }\n\n    export interface IStrokeParameters {\n        strokeThickness: number;\n        strokeDashArray: number[];\n        strokeDashCap: PenLineCap;\n        strokeDashOffset: number;\n        strokeEndLineCap: PenLineCap;\n        strokeLineJoin: PenLineJoin;\n        strokeMiterLimit: number;\n        strokeStartLineCap: PenLineCap;\n    }\n}","///<reference path=\"../../IStrokeParameters.ts\"/>\n\nnamespace curve.bounds.stroke {\n    import vec2 = la.vec2;\n\n    export function extendEndCap(box: IBoundingBox, metrics: any, pars: IStrokeParameters) {\n        //HTML5 doesn't support start *and* end cap individually\n        var cap = pars.strokeStartLineCap || pars.strokeEndLineCap || 0;\n        var func = cappers[cap] || cappers[PenLineCap.Flat];\n        func(box, metrics, pars.strokeThickness);\n    }\n\n    interface ICapper {\n        (box: IBoundingBox, metrics: any, thickness: number);\n    }\n    var cappers: ICapper[] = [];\n    cappers[PenLineCap.Round] = function (box: IBoundingBox, metrics: any, thickness: number) {\n        var [ex, ey] = metrics.endPoint;\n        var hs = thickness / 2.0;\n        box.l = Math.min(box.l, ex - hs);\n        box.r = Math.max(box.r, ex + hs);\n        box.t = Math.min(box.t, ey - hs);\n        box.b = Math.max(box.b, ey + hs);\n    };\n    cappers[PenLineCap.Square] = function (box: IBoundingBox, metrics: any, thickness: number) {\n        var ed = vec2.clone(metrics.endVector);\n        if (!ed || !ed[0] || !ed[1])\n            return;\n        vec2.normalize(ed);\n        var edo = vec2.orthogonal(vec2.clone(ed));\n\n        var [ex, ey] = metrics.endPoint;\n        var hs = thickness / 2.0;\n\n        var x1 = ex + hs * (ed[0] + edo[0]);\n        var x2 = ex + hs * (ed[0] - edo[0]);\n        var y1 = ey + hs * (ed[1] + edo[1]);\n        var y2 = ey + hs * (ed[1] - edo[1]);\n\n        box.l = Math.min(box.l, x1, x2);\n        box.r = Math.max(box.r, x1, x2);\n        box.t = Math.min(box.t, y1, y2);\n        box.b = Math.max(box.b, y1, y2);\n    };\n    cappers[PenLineCap.Flat] = function (box: IBoundingBox, metrics: any, thickness: number) {\n        var edo = vec2.clone(metrics.endVector);\n        if (!edo || !edo[0] || !edo[1])\n            return;\n        vec2.orthogonal(vec2.normalize(edo));\n\n        var [ex, ey] = metrics.endPoint;\n        var hs = thickness / 2.0;\n\n        var x1 = ex + hs * edo[0];\n        var x2 = ex + hs * -edo[0];\n        var y1 = ey + hs * edo[1];\n        var y2 = ey + hs * -edo[1];\n\n        box.l = Math.min(box.l, x1, x2);\n        box.r = Math.max(box.r, x1, x2);\n        box.t = Math.min(box.t, y1, y2);\n        box.b = Math.max(box.b, y1, y2);\n    };\n}","namespace curve.bounds.stroke {\n    import vec2 = la.vec2;\n    import ISegmentMetrics = curve.bounds.extenders.ISegmentMetrics;\n\n    export function extendLineJoin(box: IBoundingBox, sx: number, sy: number, metrics: ISegmentMetrics, lastMetrics: ISegmentMetrics, pars: IStrokeParameters) {\n        var hs = pars.strokeThickness / 2.0;\n        if (pars.strokeLineJoin === PenLineJoin.Round) {\n            box.l = Math.min(box.l, sx - hs);\n            box.r = Math.max(box.r, sx + hs);\n            box.t = Math.min(box.t, sy - hs);\n            box.b = Math.max(box.b, sy + hs);\n            return;\n        }\n        var tips = (pars.strokeLineJoin === PenLineJoin.Miter)\n            ? findMiterTips(sx, sy, metrics, lastMetrics, hs, pars.strokeMiterLimit)\n            : findBevelTips(sx, sy, metrics, lastMetrics, hs);\n        if (!tips)\n            return;\n        var x1 = tips[0][0],\n            y1 = tips[0][1],\n            x2 = tips[1][0],\n            y2 = tips[1][1];\n        box.l = Math.min(box.l, x1, x2);\n        box.r = Math.max(box.r, x1, x2);\n        box.t = Math.min(box.t, y1, y2);\n        box.b = Math.max(box.b, y1, y2);\n    }\n\n    function findMiterTips(sx: number, sy: number, metrics: ISegmentMetrics, lastMetrics: ISegmentMetrics, hs: number, miterLimit: number): Float32Array[] {\n        var av = vec2.clone(lastMetrics.endVector);\n        var bv = vec2.clone(metrics.startVector);\n        if (!av || !bv)\n            return null;\n        vec2.reverse(av);\n        var tau = vec2.angleBetween(av, bv) / 2;\n        if (isNaN(tau))\n            return null;\n\n        var miterRatio = 1 / Math.sin(tau);\n        if (miterRatio > miterLimit)\n            return findBevelTips(sx, sy, metrics, lastMetrics, hs);\n\n        //vector in direction of join point to miter tip\n        var cv = vec2.isClockwiseTo(av, bv) ? vec2.clone(av) : vec2.clone(bv);\n        vec2.normalize(vec2.reverse(vec2.rotate(cv, tau)));\n\n        //distance from join point and miter tip\n        var miterLen = hs * miterRatio;\n\n        var tip = vec2.create(sx + miterLen * cv[0], sy + miterLen * cv[1]);\n        return [tip, tip];\n    }\n\n    function findBevelTips(sx: number, sy: number, metrics: ISegmentMetrics, lastMetrics: ISegmentMetrics, hs: number): Float32Array[] {\n        var av = vec2.clone(lastMetrics.endVector);\n        var bv = vec2.clone(metrics.startVector);\n        if (!av || !bv)\n            return;\n        vec2.normalize(vec2.reverse(av));\n        vec2.normalize(bv);\n\n        var avo = vec2.clone(av),\n            bvo = vec2.clone(bv);\n        if (vec2.isClockwiseTo(av, bv)) {\n            avo = vec2.orthogonal(av);\n            bvo = vec2.reverse(vec2.orthogonal(bv));\n        } else {\n            avo = vec2.reverse(vec2.orthogonal(av));\n            bvo = vec2.orthogonal(bv);\n        }\n\n        return [\n            vec2.create(sx - hs * avo[0], sy - hs * avo[1]),\n            vec2.create(sx - hs * bvo[0], sy - hs * bvo[1])\n        ];\n    }\n}","///<reference path=\"../../IStrokeParameters.ts\"/>\n\nnamespace curve.bounds.stroke {\n    import vec2 = la.vec2;\n\n    export function extendStartCap(box: IBoundingBox, sx: number, sy: number, metrics: any, pars: IStrokeParameters) {\n        //HTML5 doesn't support start *and* end cap individually\n        var cap = pars.strokeStartLineCap || pars.strokeEndLineCap || 0;\n        var func = cappers[cap] || cappers[PenLineCap.Flat];\n        func(box, sx, sy, metrics, pars.strokeThickness);\n    }\n\n    interface ICapper {\n        (box: IBoundingBox, sx: number, sy: number, metrics: any, thickness: number);\n    }\n    var cappers: ICapper[] = [];\n    cappers[PenLineCap.Round] = function (box: IBoundingBox, sx: number, sy: number, metrics: any, thickness: number) {\n        var hs = thickness / 2.0;\n        box.l = Math.min(box.l, sx - hs);\n        box.r = Math.max(box.r, sx + hs);\n        box.t = Math.min(box.t, sy - hs);\n        box.b = Math.max(box.b, sy + hs);\n    };\n    cappers[PenLineCap.Square] = function (box: IBoundingBox, sx: number, sy: number, metrics: any, thickness: number) {\n        var sd = vec2.clone(metrics.startVector);\n        if (!sd || !sd[0] || !sd[1])\n            return;\n        vec2.reverse(vec2.normalize(sd));\n        var sdo = vec2.orthogonal(vec2.clone(sd));\n\n        var hs = thickness / 2.0;\n        var x1 = sx + hs * (sd[0] + sdo[0]);\n        var x2 = sx + hs * (sd[0] - sdo[0]);\n        var y1 = sy + hs * (sd[1] + sdo[1]);\n        var y2 = sy + hs * (sd[1] - sdo[1]);\n\n        box.l = Math.min(box.l, x1, x2);\n        box.r = Math.max(box.r, x1, x2);\n        box.t = Math.min(box.t, y1, y2);\n        box.b = Math.max(box.b, y1, y2);\n    };\n    cappers[PenLineCap.Flat] = function (box: IBoundingBox, sx: number, sy: number, metrics: any, thickness: number) {\n        var sdo = vec2.clone(metrics.startVector);\n        if (!sdo || !sdo[0] || !sdo[1])\n            return;\n        vec2.orthogonal(vec2.normalize(sdo));\n\n        var hs = thickness / 2.0;\n        var x1 = sx + hs * sdo[0];\n        var x2 = sx + hs * -sdo[0];\n        var y1 = sy + hs * sdo[1];\n        var y2 = sy + hs * -sdo[1];\n\n        box.l = Math.min(box.l, x1, x2);\n        box.r = Math.max(box.r, x1, x2);\n        box.t = Math.min(box.t, y1, y2);\n        box.b = Math.max(box.b, y1, y2);\n    };\n}","namespace curve.bounds.stroke {\n    export class StartCapExtender {\n        extend() {\n\n        }\n    }\n}","namespace curve.bounds.stroke {\n    import vec2 = la.vec2;\n    import IBoundsExtender = curve.bounds.extenders.IBoundsExtender;\n    import ISegmentMetrics = curve.bounds.extenders.ISegmentMetrics;\n\n    export class StrokeBounds implements IBoundingBox {\n        path: Path;\n        pars: IStrokeParameters;\n        l: number = 0;\n        t: number = 0;\n        r: number = 0;\n        b: number = 0;\n\n        private $calc = false;\n\n        constructor(path: Path) {\n            Object.defineProperties(this, {\n                \"path\": {value: path, writable: false}\n            });\n        }\n\n        reset() {\n            this.$calc = false;\n            this.l = this.t = this.r = this.b = 0;\n        }\n\n        ensure(): this {\n            if (!this.$calc)\n                this.calculate();\n            return this;\n        }\n\n        calculate(): this {\n            this.$calc = false;\n            this.l = Number.POSITIVE_INFINITY;\n            this.t = Number.POSITIVE_INFINITY;\n            this.r = Number.NEGATIVE_INFINITY;\n            this.b = Number.NEGATIVE_INFINITY;\n\n            var sx: number,\n                sy: number,\n                last: IBoundsExtender,\n                lastMetrics: ISegmentMetrics;\n            var selector = new ExtenderSelector();\n            this.path.exec(selector, () => {\n                var cur = selector.current;\n                var metrics = cur.init(sx, sy, selector.args);\n\n                if (!cur.isMove) {\n                    if (last.isMove) {\n                        extendStartCap(this, sx, sy, metrics, this.pars);\n                    } else if (lastMetrics) {\n                        extendLineJoin(this, sx, sy, metrics, lastMetrics, this.pars);\n                    }\n                }\n\n                cur.extendStrokeBox(this, sx, sy, selector.args, metrics, this.pars);\n\n                sx = metrics.endPoint[0];\n                sy = metrics.endPoint[1];\n                last = cur;\n                lastMetrics = metrics;\n            });\n\n            if (lastMetrics)\n                extendEndCap(this, lastMetrics, this.pars);\n\n            this.$calc = true;\n            return this;\n        }\n    }\n}","namespace curve.compiler {\n    export function compile(arg0: string|ISegmentExecutor): ICompiledSegment[] {\n        var compiler = PathCompiler.instance;\n        compiler.compiled.length = 0;\n        if (typeof arg0 === \"string\") {\n            var parser = parse.getParser();\n            parser.parse(compiler, arg0);\n        } else if (typeof arg0.exec === \"function\") {\n            arg0.exec(compiler);\n        }\n        return compiler.compiled;\n    }\n\n    class PathCompiler implements ISegmentRunner {\n        static instance = new PathCompiler();\n\n        compiled: ICompiledSegment[] = [];\n\n        setFillRule(fillRule: FillRule) {\n            this.compiled.push({t: CompiledOpType.setFillRule, a: [fillRule]});\n        }\n\n        closePath() {\n            this.compiled.push({t: CompiledOpType.closePath, a: []});\n        }\n\n        moveTo(x: number, y: number) {\n            this.compiled.push({t: CompiledOpType.moveTo, a: [x, y]});\n        }\n\n        lineTo(x: number, y: number) {\n            this.compiled.push({t: CompiledOpType.lineTo, a: [x, y]});\n        }\n\n        bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number) {\n            this.compiled.push({t: CompiledOpType.bezierCurveTo, a: [cp1x, cp1y, cp2x, cp2y, x, y]});\n        }\n\n        quadraticCurveTo(cpx: number, cpy: number, x: number, y: number) {\n            this.compiled.push({t: CompiledOpType.quadraticCurveTo, a: [cpx, cpy, x, y]});\n        }\n\n        arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean) {\n            this.compiled.push({t: CompiledOpType.arc, a: [x, y, radius, startAngle, endAngle, anticlockwise]});\n        }\n\n        arcTo(x1: number, y1: number, x2: number, y2: number, radius: number) {\n            this.compiled.push({t: CompiledOpType.arcTo, a: [x1, y1, x2, y2, radius]});\n        }\n\n        ellipse(cx: number, cy: number, rx: number, ry: number, rotation: number, startAngle: number, endAngle: number, antiClockwise?: boolean) {\n            this.compiled.push({\n                t: CompiledOpType.ellipse,\n                a: [cx, cy, rx, ry, rotation, startAngle, endAngle, antiClockwise]\n            })\n        }\n    }\n}","namespace curve.compiler {\n    export function decompile(runner: ISegmentRunner, compiled: ICompiledSegment[]) {\n        for (var i = 0; !!compiled && i < compiled.length; i++) {\n            let seg = compiled[i];\n            let typeStr: string;\n            if (typeof seg.t !== \"number\" || !(typeStr = CompiledOpType[seg.t])) {\n                console.warn(`Unknown compiled path command: ${seg.t}, ${seg.a}`);\n                continue;\n            }\n            var func = runner[typeStr];\n            func && func.apply(runner, seg.a);\n        }\n    }\n}","interface ICompiledSegment {\n    t: CompiledOpType;\n    a: any[];\n}\n\nenum CompiledOpType {\n    setFillRule = 1,\n    closePath = 2,\n    moveTo = 3,\n    lineTo = 4,\n    bezierCurveTo = 5,\n    quadraticCurveTo = 6,\n    arc = 7,\n    arcTo = 8,\n    ellipse = 9,\n}","namespace curve.ellipticalArc {\n    import vec2 = la.vec2;\n\n    // NOTES\n    // rx, ry, phi are the same between both parameterizations\n    // [cx, cy]/[rx, ry] defines the ellipse\n    // there are 2 possible solutions that are \"picked\" through anti-clockwise flag\n    // if anticlockwise, the arc becomes the complementary arc\n    //      (large arc sweeping clockwise becomes small arc sweeping counterclockwise)\n    // [sx, sy] defines the starting point as characterized by the starting angle\n    // [ex, ey] defines the ending point as characterized by the ending angle\n\n    export interface IEllipticalArcParameterization {\n        sx: number;\n        sy: number;\n        ex: number;\n        ey: number;\n        fa: number;\n        fs: number;\n        rx: number;\n        ry: number;\n        phi: number;\n    }\n\n    // [cx, cy] = ellipse center\n    // [rx, ry] = radial size\n    // sa = starting angle (radians - clockwise from x-axis)\n    // ea = ending angle (radians - clockwise from x-axis)\n    // phi = angle (radians) from x-axis of coordinate space to x-axis of ellipse\n    // ac = anti-clockwise\n    export function fromEllipse(cx: number, cy: number, rx: number, ry: number, phi: number, sa: number, ea: number, ac: boolean): IEllipticalArcParameterization {\n        // http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n        // F.6.4 Conversion from center to endpoint parameterization\n\n        // anti-clockwise inverts fA & fS (not mentioned in specification)\n\n        // F.6.4.1\n        // Compute a`\n        var ap = vec2.rotate(vec2.create(rx * Math.cos(sa), ry * Math.sin(sa)), phi);\n        ap[0] += cx;\n        ap[1] += cy;\n\n        // F.6.4.2\n        // Compute b`\n        var bp = vec2.rotate(vec2.create(rx * Math.cos(ea), ry * Math.sin(ea)), phi);\n        bp[0] += cx;\n        bp[1] += cy;\n\n        var da = ea - sa;\n        // F.6.4.3\n        // Compute fA\n        var fa = Math.abs(da) > Math.PI ? 1 : 0;\n        var expac = Math.abs(sa - ea) ? ea < sa : sa > ea;\n        fa = (expac !== ac) ? 1 - fa : fa;\n\n        // F.6.4.4\n        // Compute fS\n        var fs = ac === true ? 0 : 1;\n\n        return {\n            sx: ap[0],\n            sy: ap[1],\n            ex: bp[0],\n            ey: bp[1],\n            fa: fa,\n            fs: fs,\n            rx: rx,\n            ry: ry,\n            phi: phi\n        };\n    }\n}","namespace curve.ellipticalArc {\n    // [apx, apy] = primed coordinate values from F.6.5.1\n    // [rx, ry] = radial size\n    export function correctRadii(rx: number, ry: number, apx: number, apy: number): number[] {\n        // http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n        // F.6.6 Correction of out-of-range radii\n\n        // F.6.6.1\n        // Ensure radii are positive\n        rx = Math.abs(rx);\n        ry = Math.abs(ry);\n\n        // F.6.6.2\n        // Compute lambda\n        var lambda = ((apx * apx) / (rx * rx)) + ((apy * apy) / (ry * ry));\n\n        // F.6.6.3\n        // Alter small radii\n        if (lambda > 1) {\n            var rl = Math.sqrt(lambda);\n            rx *= rl;\n            ry *= rl;\n        }\n\n        return [rx, ry];\n    }\n}","namespace curve.ellipticalArc {\n    import vec2 = la.vec2;\n    var PI2 = 2 * Math.PI;\n\n    // NOTES\n    // rx, ry, phi are the same between both parameterizations\n    // [cx, cy] is computed based on [sx, sy, rx, ry, ex, ey, fa, fs]\n    // there are 2 possible solutions for ellipse [cx, cy]\n    // each ellipse has 2 possible solutions\n    //   these solutions should be chosen based on fa, fs, and [sx,sy]->[ex,ey] relationship\n    //   the solutions chosen should have exactly one anti-clockwise true and one anti-clockwise false\n\n    export interface IEllipseParameterization {\n        cx: number;\n        cy: number;\n        rx: number;\n        ry: number;\n        phi?: number; // rotation (radians)\n        sa?: number; // start angle (radians)\n        ea?: number; // end angle (radians)\n        ac?: boolean; // anti-clockwise\n    }\n\n    // [sx, sy] = start point\n    // [rx, ry] = radial size\n    // phi = angle (radians) from x-axis of coordinate space to x-axis of ellipse\n    // fa = large arc flag\n    // fs = sweep direction flag\n    // [ex, ey] = end point\n    export function toEllipse(sx: number, sy: number, rx: number, ry: number, phi: number, fa: number, fs: number, ex: number, ey: number): IEllipseParameterization {\n        // http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n        // F.6.5 Conversion from endpoint to center parameterization\n        if (rx === 0 || ry === 0) {\n            return {cx: ex, cy: ey, rx: rx, ry: ry};\n        }\n\n        // F.6.5.1\n        // Compute a`\n        var ap = vec2.create((sx - ex) / 2.0, (sy - ey) / 2.0);\n        vec2.rotate(ap, -phi);\n\n        // Correct radii\n        [rx, ry] = correctRadii(rx, ry, ap[0], ap[1]);\n\n        // F.6.5.2\n        // Compute c`\n        var rx2 = rx * rx;\n        var ry2 = ry * ry;\n        var apx2 = ap[0] * ap[0];\n        var apy2 = ap[1] * ap[1];\n        var factor = Math.sqrt(((rx2 * ry2) - (rx2 * apy2) - (ry2 * apx2)) / ((rx2 * apy2) + (ry2 * apx2)));\n        if (fa === fs) {\n            factor *= -1;\n        }\n        var cp = vec2.create(rx * ap[1] / ry, -ry * ap[0] / rx);\n        cp[0] *= factor;\n        cp[1] *= factor;\n\n        // F.6.5.3\n        // Compute c\n        var c = vec2.rotate(vec2.clone(cp), phi);\n        c[0] += (sx + ex) / 2.0;\n        c[1] += (sy + ey) / 2.0;\n\n        // F.6.5.5\n        // Compute theta1\n        var v = vec2.create(1, 0);\n        var u = vec2.create((ap[0] - cp[0]) / rx, (ap[1] - cp[1]) / ry);\n        var sa = vec2.angleBetween(v, u) * signAdjust(v, u);\n        if (sa < 0) {\n            sa += PI2;\n        }\n\n        // F.6.5.6\n        // Compute delta-theta\n        v = vec2.create((-ap[0] - cp[0]) / rx, (-ap[1] - cp[1]) / ry);\n        var dt = (vec2.angleBetween(u, v) * signAdjust(u, v)) % PI2;\n        // Correct for sweep flag\n        if (fs === 0 && dt > 0) {\n            dt -= PI2;\n        } else if (fs === 1 && dt < 0) {\n            dt += PI2;\n        }\n\n        // Normalize end angle\n        var ea = (sa + dt) % PI2;\n        if (ea < 0) {\n            ea += PI2;\n        }\n\n        var ac = fs === 0;\n\n        return {\n            cx: c[0],\n            cy: c[1],\n            rx: rx,\n            ry: ry,\n            phi: phi,\n            sa: sa,\n            ea: ea,\n            ac: ac\n        };\n    }\n\n    function signAdjust(u: Float32Array, v: Float32Array): number {\n        return ((u[0] * v[1]) - (u[1] * v[0])) < 0 ? -1 : 1;\n    }\n}","interface ISegmentExecutor {\n    exec(runner: ISegmentRunner, step?: Function);\n}\n\ninterface ISegmentRunner {\n    setFillRule(fillRule: FillRule);\n    closePath();\n    moveTo(x: number, y: number);\n    lineTo(x: number, y: number);\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number);\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number);\n    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean);\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number);\n    ellipse(cx: number, cy: number, rx: number, ry: number, rotation: number, startAngle: number, endAngle: number, antiClockwise?: boolean);\n}\n\ninterface ISegment {\n    (runner: ISegmentRunner): void;\n}\n\nenum FillRule {\n    EvenOdd = 0,\n    NonZero = 1\n}\n\nenum SweepDirection {\n    Counterclockwise = 0,\n    Clockwise = 1,\n}\n\ninterface CanvasRenderingContext2D extends ISegmentRunner {\n}\n","namespace curve.parse.buffer {\n    export class Parser implements IParser {\n        parse(runner: ISegmentRunner, data: string|Uint8Array) {\n            var buffer = toBuffer(data);\n            //TODO: Implement\n            return undefined;\n        }\n    }\n\n    export function parseNumber(tracker: IParseTracker): number {\n        var start = tracker.offset;\n        var data = tracker.data;\n        var len = data.length;\n        //NaN\n        if (isNaN(data, tracker.offset)) {\n            tracker.offset += 3;\n            return NaN;\n        }\n\n        //Check - or +\n        var negate = false;\n        if (data[tracker.offset] === 0x2D) {\n            negate = true;\n            tracker.offset++;\n        } else if (data[tracker.offset] === 0x2B) {\n            tracker.offset++;\n        }\n\n        //Infinity\n        if (isInfinity(data, tracker.offset)) {\n            tracker.offset += 8;\n            return negate ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n        }\n\n        //(characteristic)[.(mantissa)][Ee[+-](significand)]\n        parseInteger(tracker);\n        var cur = data[tracker.offset];\n        if (cur === 0x2E) { // '.'\n            tracker.offset++;\n            if (!parseMantissa(tracker))\n                throw new Error(\"Invalid number\");\n        }\n\n        if (!parseSignificand(tracker))\n            throw new Error(\"Invalid number\");\n\n        return parseFloat(getSlice(data, start, tracker.offset - start));\n    }\n\n    function toBuffer(data: string|Uint8Array): Uint8Array {\n        if (data instanceof Uint8Array)\n            return data;\n        if (typeof TextEncoder === \"function\")\n            return new TextEncoder().encode(<string>data);\n    }\n\n    function isNaN(data: Uint8Array, i: number): boolean {\n        return data[i + 0] === 0x4E //N\n            && data[i + 1] === 0x61 //a\n            && data[i + 2] === 0x4E //N\n            ;\n    }\n\n    function isInfinity(data: Uint8Array, i: number): boolean {\n        return data[i + 0] === 0x49 //I\n            && data[i + 1] === 0x6E //n\n            && data[i + 2] === 0x66 //f\n            && data[i + 3] === 0x69 //i\n            && data[i + 4] === 0x6E //n\n            && data[i + 5] === 0x69 //i\n            && data[i + 6] === 0x74 //t\n            && data[i + 7] === 0x79 //y\n            ;\n    }\n\n    function parseInteger(tracker: IParseTracker): boolean {\n        var start = tracker.offset;\n        var data = tracker.data;\n        var cur: number;\n        while ((cur = data[tracker.offset]) != null && cur >= 0x30 && cur <= 0x39) {\n            tracker.offset++;\n        }\n        return tracker.offset !== start;\n    }\n\n    function parseMantissa(tracker: IParseTracker): boolean {\n        var start = tracker.offset;\n        var data = tracker.data;\n        var cur: number;\n        while ((cur = data[tracker.offset]) != null && cur >= 0x30 && cur <= 0x39) {\n            tracker.offset++;\n        }\n        return tracker.offset !== start;\n    }\n\n    function parseSignificand(tracker: IParseTracker): boolean {\n        var data = tracker.data;\n        if (data[tracker.offset] !== 0x45 && data[tracker.offset] !== 0x65)\n            return true;\n        tracker.offset++;\n\n        var cur = data[tracker.offset];\n        if (cur === 0x2D || cur === 0x2B) // '-' '+'\n            tracker.offset++;\n        return parseInteger(tracker);\n    }\n\n    function getSlice(data: Uint8Array, offset: number, length: number): string {\n        var buf = new Array(length);\n        for (var i = 0; i < length; i++) {\n            buf[i] = data[offset + i];\n        }\n        return String.fromCharCode.apply(null, buf);\n    }\n}","namespace curve.parse.dom {\n    var domsvg = <SVGSVGElement>document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    var dompath = <SVGPathElement>document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\n    export class Parser implements IParser {\n        parse(runner: ISegmentRunner, data: string|Uint8Array) {\n            if (typeof data !== \"string\") {\n                console.warn(\"Input parse data was not a string.\", data);\n                return;\n            }\n            dompath.setAttribute(\"d\", <string>data);\n\n            var segments = dompath.pathSegList,\n                cur: number[] = [0, 0];\n            for (var i = 0, len = segments.numberOfItems; i < len; i++) {\n                parseSegment(runner, segments.getItem(i), cur);\n            }\n        }\n    }\n\n    function parseSegment(runner: ISegmentRunner, segment: SVGPathSeg, cur: number[]) {\n        switch (segment.pathSegType) {\n            case SVGPathSeg.PATHSEG_ARC_ABS:\n                let arc1 = <SVGPathSegArcAbs>segment;\n                let ell1 = ellipticalArc.toEllipse(cur[0], cur[1], arc1.r1, arc1.r2, arc1.angle, arc1.largeArcFlag ? 1 : 0, arc1.sweepFlag ? 1 : 0, arc1.x, arc1.y);\n                if (!ell1.rx || !ell1.ry)\n                    runner.lineTo(ell1.cx, ell1.cy);\n                else\n                    runner.ellipse(ell1.cx, ell1.cy, ell1.rx, ell1.ry, ell1.phi, ell1.sa, ell1.ea, ell1.ac);\n                cur[0] = arc1.x;\n                cur[1] = arc1.y;\n                break;\n            case SVGPathSeg.PATHSEG_ARC_REL:\n                let arc2 = <SVGPathSegArcRel>segment;\n                let ell2 = ellipticalArc.toEllipse(cur[0], cur[1], arc2.r1, arc2.r2, arc2.angle, arc2.largeArcFlag ? 1 : 0, arc2.sweepFlag ? 1 : 0, cur[0] + arc2.x, cur[1] + arc2.y);\n                if (!ell2.rx || !ell2.ry)\n                    runner.lineTo(ell2.cx, ell2.cy);\n                else\n                    runner.ellipse(ell2.cx, ell2.cy, ell2.rx, ell2.ry, ell2.phi, ell2.sa, ell2.ea, ell2.ac);\n                cur[0] += arc2.x;\n                cur[1] += arc2.y;\n                break;\n            case SVGPathSeg.PATHSEG_CLOSEPATH:\n                runner.closePath();\n                break;\n            case SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                let curve1 = <SVGPathSegCurvetoCubicAbs>segment;\n                runner.bezierCurveTo(curve1.x1, curve1.y1, curve1.x2, curve1.y2, curve1.x, curve1.y);\n                cur[0] = curve1.x;\n                cur[1] = curve1.y;\n                break;\n            case SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                let curve2 = <SVGPathSegCurvetoCubicRel>segment;\n                runner.bezierCurveTo(cur[0] + curve2.x1, cur[1] + curve2.y1, cur[0] + curve2.x2, cur[1] + curve2.y2, cur[0] + curve2.x, cur[1] + curve2.y);\n                cur[0] += curve2.x;\n                cur[1] += curve2.y;\n                break;\n            case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                let curve3 = <SVGPathSegCurvetoCubicSmoothAbs>segment;\n                smoothCubic(runner, curve3.x2, curve3.y2, curve3.x, curve3.y, cur);\n                break;\n            case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                let curve4 = <SVGPathSegCurvetoCubicSmoothRel>segment;\n                smoothCubic(runner, cur[0] + curve4.x2, cur[1] + curve4.y2, cur[0] + curve4.x, cur[1] + curve4.y, cur);\n                break;\n            case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                let curve5 = <SVGPathSegCurvetoQuadraticAbs>segment;\n                runner.quadraticCurveTo(curve5.x1, curve5.y1, curve5.x, curve5.y);\n                cur[0] = curve5.x;\n                cur[1] = curve5.y;\n                break;\n            case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                let curve6 = <SVGPathSegCurvetoQuadraticRel>segment;\n                runner.quadraticCurveTo(cur[0] + curve6.x1, cur[1] + curve6.y1, cur[0] + curve6.x, cur[1] + curve6.y);\n                cur[0] += curve6.x;\n                cur[1] += curve6.y;\n                break;\n            case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                let curve7 = <SVGPathSegCurvetoQuadraticSmoothAbs>segment;\n                smoothQuadratic(runner, curve7.x, curve7.y, cur);\n                break;\n            case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                let curve8 = <SVGPathSegCurvetoQuadraticSmoothRel>segment;\n                smoothQuadratic(runner, cur[0] + curve8.x, cur[1] + curve8.y, cur);\n                break;\n            case SVGPathSeg.PATHSEG_LINETO_ABS:\n                let line1 = <SVGPathSegLinetoAbs>segment;\n                cur[0] = line1.x;\n                cur[1] = line1.y;\n                runner.lineTo(cur[0], cur[1]);\n                break;\n            case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                let line2 = <SVGPathSegLinetoHorizontalAbs>segment;\n                cur[0] = line2.x;\n                runner.lineTo(cur[0], cur[1]);\n                break;\n            case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                let line3 = <SVGPathSegLinetoHorizontalRel>segment;\n                cur[0] += line3.x;\n                runner.lineTo(cur[0], cur[1]);\n                break;\n            case SVGPathSeg.PATHSEG_LINETO_REL:\n                let line4 = <SVGPathSegLinetoRel>segment;\n                cur[0] += line4.x;\n                cur[1] += line4.y;\n                runner.lineTo(cur[0], cur[1]);\n                break;\n            case SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                let line5 = <SVGPathSegLinetoVerticalAbs>segment;\n                cur[1] = line5.y;\n                runner.lineTo(cur[0], cur[1]);\n                break;\n            case SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                let line6 = <SVGPathSegLinetoVerticalRel>segment;\n                cur[1] += line6.y;\n                runner.lineTo(cur[0], cur[1]);\n                break;\n            case SVGPathSeg.PATHSEG_MOVETO_ABS:\n                let move1 = <SVGPathSegMovetoAbs>segment;\n                cur[0] = move1.x;\n                cur[1] = move1.y;\n                runner.moveTo(cur[0], cur[1]);\n                break;\n            case SVGPathSeg.PATHSEG_MOVETO_REL:\n                let move2 = <SVGPathSegMovetoRel>segment;\n                cur[0] += move2.x;\n                cur[1] += move2.y;\n                runner.moveTo(cur[0], cur[1]);\n                break;\n            default:\n            case SVGPathSeg.PATHSEG_UNKNOWN:\n                console.warn(\"Unknown path segment.\");\n                break;\n        }\n    }\n\n    function smoothCubic(runner: ISegmentRunner, x2: number, y2: number, x: number, y: number, cur: number[]) {\n        var [cx, cy] = cur;\n        console.warn(\"Smooth cubic\", \"Not implemented\");\n    }\n\n    function smoothQuadratic(runner: ISegmentRunner, x: number, y: number, cur: number[]) {\n        var [cx, cy] = cur;\n        console.warn(\"Smooth quadratic\", \"Not implemented\");\n    }\n}","namespace curve.parse {\n    export enum ParseStyles {\n        Dom = 1,\n        Buffer = 2,\n        CharMatching = 3,\n    }\n}","///<reference path=\"ParseTypes.ts\"/>\n\nnamespace curve.parse {\n    export interface IParser {\n        parse(runner: ISegmentRunner, data: string|Uint8Array);\n    }\n\n    export var style = ParseStyles.CharMatching;\n\n    export function getParser(): IParser {\n        if (style === ParseStyles.Buffer)\n            return new buffer.Parser();\n        else if (style === ParseStyles.Dom)\n            return new dom.Parser();\n        return new matching.Parser();\n    }\n}","// Path Markup Syntax: http://msdn.microsoft.com/en-us/library/cc189041(v=vs.95).aspx\n\n//FigureDescription Syntax\n// MoveCommand DrawCommands [CloseCommand]\n\n//Double Syntax\n// digits\n// digits.digits\n// 'Infinity'\n// '-Infinity'\n// 'NaN'\n\n//Point Syntax\n// x,y\n// x y\n\n//Loop until exhausted\n//  Parse FigureDescription\n//      Find \"M\" or \"m\"? - Parse MoveCommand (start point)\n//          <point>\n//\n//      Find \"L\" or \"l\"? - Parse LineCommand (end point)\n//          <point>\n//      Find \"H\" or \"h\"? - Parse HorizontalLineCommand (x)\n//          <double>\n//      Find \"V\" or \"v\"? - Parse VerticalLineCommand (y)\n//          <double>\n//      Find \"C\" or \"c\"? - Parse CubicBezierCurveCommand (control point 1, control point 2, end point)\n//          <point> <point> <point>\n//      Find \"Q\" or \"q\"? - Parse QuadraticBezierCurveCommand (control point, end point)\n//          <point> <point>\n//      Find \"S\" or \"s\"? - Parse SmoothCubicBezierCurveCommand (control point 2, end point)\n//          <point> <point>\n//      Find \"T\" or \"t\"? - Parse SmoothQuadraticBezierCurveCommand (control point, end point)\n//          <point> <point>\n//      Find \"A\" or \"a\"? - Parse EllipticalArcCommand (size, rotationAngle, isLargeArcFlag, sweepDirectionFlag, endPoint)\n//          <point> <double> <1,0> <1,0> <point>\n//\n//      Find \"Z\" or \"z\"? - CloseCommand\n\nnamespace curve.parse.matching {\n    import IEllipseParameterization = curve.ellipticalArc.IEllipseParameterization;\n\n    export class Parser implements IParser {\n        parse(runner: ISegmentRunner, data: string|Uint8Array) {\n            if (typeof data === \"string\")\n                parse(runner, data, data.length);\n            else\n                console.warn(\"Input parse data was not a string.\", data);\n        }\n    }\n\n    interface IPoint {\n        x: number;\n        y: number;\n    }\n\n    function parse(runner: ISegmentRunner, str: string, len: number) {\n        var index = 0;\n        go();\n\n        function go() {\n            var cp = {x: 0, y: 0};\n            var cp1: IPoint, cp2: IPoint, cp3: IPoint;\n            var start = {x: 0, y: 0};\n            var cbz = false; // last figure is a cubic bezier curve\n            var qbz = false; // last figure is a quadratic bezier curve\n            var cbzp = {x: 0, y: 0}; // points needed to create \"smooth\" beziers\n            var qbzp = {x: 0, y: 0}; // points needed to create \"smooth\" beziers\n            var ell: IEllipseParameterization;\n\n            while (index < len) {\n                var c;\n                while (index < len && (c = str.charAt(index)) === ' ') {\n                    index++;\n                }\n                index++;\n                var relative = false;\n                switch (c) {\n                    case 'f':\n                    case 'F':\n                        c = str.charAt(index);\n                        if (c === '0')\n                            runner.setFillRule(FillRule.EvenOdd);\n                        else if (c === '1')\n                            runner.setFillRule(FillRule.NonZero);\n                        else\n                            return null;\n                        index++;\n                        c = str.charAt(index);\n                        break;\n                    case 'm':\n                        relative = true;\n                    case 'M':\n                        cp1 = parsePoint();\n                        if (cp1 == null)\n                            break;\n                        if (relative) {\n                            cp1.x += cp.x;\n                            cp1.y += cp.y;\n                        }\n                        runner.moveTo(cp1.x, cp1.y);\n                        start.x = cp.x = cp1.x;\n                        start.y = cp.y = cp1.y;\n                        advance();\n                        while (morePointsAvailable()) {\n                            if ((cp1 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp1.x += cp.x;\n                                cp1.y += cp.y;\n                            }\n                            runner.lineTo(cp1.x, cp1.y);\n                        }\n                        cp.x = cp1.x;\n                        cp.y = cp1.y;\n                        cbz = qbz = false;\n                        break;\n                    case 'l':\n                        relative = true;\n                    case 'L':\n                        while (morePointsAvailable()) {\n                            if ((cp1 = parsePoint()) == null)\n                                break;\n\n                            if (relative) {\n                                cp1.x += cp.x;\n                                cp1.y += cp.y;\n                            }\n\n                            runner.lineTo(cp1.x, cp1.y);\n\n                            cp.x = cp1.x;\n                            cp.y = cp1.y;\n                            advance();\n                        }\n                        cbz = qbz = false;\n                        break;\n                    case 'h':\n                        relative = true;\n                    case 'H':\n                        var x = parseDouble();\n                        if (x == null)\n                            break;\n\n                        if (relative)\n                            x += cp.x;\n                        cp = {x: x, y: cp.y};\n\n                        runner.lineTo(cp.x, cp.y);\n                        cbz = qbz = false;\n                        break;\n                    case 'v':\n                        relative = true;\n                    case 'V':\n                        var y = parseDouble();\n                        if (y == null)\n                            break;\n\n                        if (relative)\n                            y += cp.y;\n                        cp = {x: cp.x, y: y};\n\n                        runner.lineTo(cp.x, cp.y);\n                        cbz = qbz = false;\n                        break;\n                    case 'c':\n                        relative = true;\n                    case 'C':\n                        while (morePointsAvailable()) {\n                            if ((cp1 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp1.x += cp.x;\n                                cp1.y += cp.y;\n                            }\n                            advance();\n                            if ((cp2 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp2.x += cp.x;\n                                cp2.y += cp.y;\n                            }\n                            advance();\n                            if ((cp3 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp3.x += cp.x;\n                                cp3.y += cp.y;\n                            }\n                            advance();\n\n                            runner.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, cp3.x, cp3.y);\n\n                            cp1.x = cp3.x;\n                            cp1.y = cp3.y;\n                        }\n                        cp.x = cp3.x;\n                        cp.y = cp3.y;\n                        cbz = true;\n                        cbzp.x = cp2.x;\n                        cbzp.y = cp2.y;\n                        qbz = false;\n                        break;\n                    case 's':\n                        relative = true;\n                    case 'S':\n                        while (morePointsAvailable()) {\n                            if ((cp2 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp2.x += cp.x;\n                                cp2.y += cp.y;\n                            }\n                            advance();\n                            if ((cp3 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp3.x += cp.x;\n                                cp3.y += cp.y;\n                            }\n\n                            if (cbz) {\n                                cp1.x = 2 * cp.x - cbzp.x;\n                                cp1.y = 2 * cp.y - cbzp.y;\n                            } else\n                                cp1 = cp;\n\n                            runner.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, cp3.x, cp3.y);\n\n                            cbz = true;\n                            cbzp.x = cp2.x;\n                            cbzp.y = cp2.y;\n\n                            cp.x = cp3.x;\n                            cp.y = cp3.y;\n\n                            advance();\n                        }\n                        qbz = false;\n                        break;\n                    case 'q':\n                        relative = true;\n                    case 'Q':\n                        while (morePointsAvailable()) {\n                            if ((cp1 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp1.x += cp.x;\n                                cp1.y += cp.y;\n                            }\n                            advance();\n                            if ((cp2 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp2.x += cp.x;\n                                cp2.y += cp.y;\n                            }\n                            advance();\n\n                            runner.quadraticCurveTo(cp1.x, cp1.y, cp2.x, cp2.y);\n\n                            cp.x = cp2.x;\n                            cp.y = cp2.y;\n                        }\n                        qbz = true;\n                        qbzp.x = cp1.x;\n                        qbzp.y = cp1.y;\n                        cbz = false;\n                        break;\n                    case 't':\n                        relative = true;\n                    case 'T':\n                        while (morePointsAvailable()) {\n                            if ((cp2 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp2.x += cp.x;\n                                cp2.y += cp.y;\n                            }\n\n                            if (qbz) {\n                                cp1.x = 2 * cp.x - qbzp.x;\n                                cp1.y = 2 * cp.y - qbzp.y;\n                            } else\n                                cp1 = cp;\n\n                            runner.quadraticCurveTo(cp1.x, cp1.y, cp2.x, cp2.y);\n\n                            qbz = true;\n                            qbzp.x = cp1.x;\n                            qbzp.y = cp1.y;\n\n                            cp.x = cp2.x;\n                            cp.y = cp2.y;\n\n                            advance();\n                        }\n                        cbz = false;\n                        break;\n                    case 'a':\n                        relative = true;\n                    case 'A':\n                        while (morePointsAvailable()) {\n                            if ((cp1 = parsePoint()) == null)\n                                break;\n\n                            var angle = parseDouble();\n                            var is_large = parseDouble() !== 0 ? 1 : 0;\n                            var sweep = SweepDirection.Counterclockwise;\n                            if (parseDouble() !== 0) sweep = SweepDirection.Clockwise;\n\n                            if ((cp2 = parsePoint()) == null)\n                                break;\n                            if (relative) {\n                                cp2.x += cp.x;\n                                cp2.y += cp.y;\n                            }\n\n                            var phi = angle * Math.PI / 180.0;\n                            ell = ellipticalArc.toEllipse(cp.x, cp.y, cp1.x, cp1.y, phi, is_large, sweep, cp2.x, cp2.y);\n                            if (!ell.rx || !ell.ry)\n                                runner.lineTo(ell.cx, ell.cy);\n                            else\n                                runner.ellipse(ell.cx, ell.cy, ell.rx, ell.ry, ell.phi, ell.sa, ell.ea, ell.ac);\n\n                            cp.x = cp2.x;\n                            cp.y = cp2.y;\n\n                            advance();\n                        }\n                        cbz = qbz = false;\n                        break;\n                    case 'z':\n                    case 'Z':\n                        runner.closePath();\n\n                        cp.x = start.x;\n                        cp.y = start.y;\n                        cbz = qbz = false;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n\n        function parsePoint(): IPoint {\n            var x = parseDouble();\n            if (x == null)\n                return null;\n\n            var c;\n            while (index < len && ((c = str.charAt(index)) === ' ' || c === ',')) {\n                index++;\n            }\n            if (index >= len)\n                return null;\n\n            var y = parseDouble();\n            if (y == null)\n                return null;\n\n            return {x: x, y: y};\n        }\n\n        function parseDouble(): number {\n            advance();\n            var isNegative = false;\n            if (match('-')) {\n                isNegative = true;\n                index++;\n            } else if (match('+')) {\n                index++;\n            }\n            if (match('Infinity')) {\n                index += 8;\n                return isNegative ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n            }\n            if (match('NaN'))\n                return NaN;\n\n            var temp = '';\n            while (index < len) {\n                var code = str.charCodeAt(index);\n                var c = str[index];\n                //0-9, ., E, e, E-, e-\n                if (code >= 48 && code <= 57)\n                    temp += c;\n                else if (code === 46)\n                    temp += c;\n                else if (c === 'E' || c === 'e') {\n                    temp += c;\n                    if (str[index + 1] === '-') {\n                        temp += '-';\n                        index++;\n                    }\n                }\n                else\n                    break;\n                index++;\n            }\n            if (temp.length === 0)\n                return null;\n            var f = parseFloat(temp);\n            return isNegative ? -f : f;\n        }\n\n        function advance() {\n            var code: number;\n            var c: string;\n            while (index < len) {\n                code = str.charCodeAt(index);\n                //alphanum\n                if ((code >= 65 && code <= 90) || (code >= 97 && code <= 122) || (code >= 48 && code <= 57))\n                    break;\n                c = String.fromCharCode(code);\n                if (c === '.')\n                    break;\n                if (c === '-')\n                    break;\n                if (c === '+')\n                    break;\n                index++;\n            }\n        }\n\n        function match(matchStr: string): boolean {\n            var c1: string;\n            var c2: string;\n            for (var i = 0; i < matchStr.length && (index + i) < len; i++) {\n                c1 = matchStr.charAt(i);\n                c2 = str.charAt(index + i);\n                if (c1 !== c2)\n                    return false;\n            }\n            return true;\n        }\n\n        function morePointsAvailable(): boolean {\n            var c;\n            while (index < len && ((c = str.charAt(index)) === ',' || c === ' ')) {\n                index++;\n            }\n            if (index >= len)\n                return false;\n            if (c === '.' || c === '-' || c === '+')\n                return true;\n            var code = str.charCodeAt(index);\n            return code >= 48 && code <= 57;\n        }\n    }\n}","namespace curve {\n    export class Path implements ISegmentRunner, ISegmentExecutor {\n        private $ops: ISegment[] = [];\n\n        constructor();\n        constructor(path: Path);\n        constructor(d: string);\n        constructor(compiled: ICompiledSegment[]);\n        constructor(arg0?: string|Path|ICompiledSegment[]) {\n            if (arg0 instanceof Path) {\n                arg0.exec(this);\n            } else if (Array.isArray(arg0)) {\n                new compiler.decompile(this, <ICompiledSegment[]>arg0);\n            } else if (typeof arg0 === \"string\") {\n                var parser = parse.getParser();\n                parser.parse(this, arg0);\n            }\n        }\n\n        get isEmpty() {\n            return this.$ops.length < 1;\n        }\n\n        reset() {\n            this.$ops.length = 0;\n        }\n\n        exec(runner: ISegmentRunner, step?: Function) {\n            for (var ops = this.$ops, i = 0; ops && i < ops.length; i++) {\n                ops[i](runner);\n                step && step();\n            }\n        }\n\n        draw(ctx: CanvasRenderingContext2D) {\n            this.exec(ctx);\n        }\n\n        addPath(path: Path) {\n            path.exec(this);\n        }\n\n        setFillRule(fillRule: FillRule) {\n            this.$ops.push(exec => exec.setFillRule(fillRule));\n        }\n\n        closePath() {\n            this.$ops.push(exec => exec.closePath());\n        }\n\n        moveTo(x: number, y: number) {\n            this.$ops.push(exec => exec.moveTo(x, y));\n        }\n\n        lineTo(x: number, y: number) {\n            this.$ops.push(exec => exec.lineTo(x, y));\n        }\n\n        bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number) {\n            this.$ops.push(exec => exec.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n        }\n\n        quadraticCurveTo(cpx: number, cpy: number, x: number, y: number) {\n            this.$ops.push(exec => exec.quadraticCurveTo(cpx, cpy, x, y));\n        }\n\n        arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean) {\n            this.$ops.push(exec => exec.arc(x, y, radius, startAngle, endAngle, anticlockwise));\n        }\n\n        arcTo(x1: number, y1: number, x2: number, y2: number, radius: number) {\n            this.$ops.push(exec => exec.arcTo(x1, y1, x2, y2, radius));\n        }\n\n        ellipse(cx: number, cy: number, rx: number, ry: number, rotation: number, startAngle: number, endAngle: number, antiClockwise?: boolean) {\n            this.$ops.push(exec => exec.ellipse(cx, cy, rx, ry, rotation, startAngle, endAngle, antiClockwise));\n        }\n\n        static parse(runner: ISegmentRunner, data: string) {\n            var parser = parse.getParser();\n            parser.parse(runner, data);\n        }\n    }\n}","interface CanvasRenderingContext2D {\n    ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, antiClockwise?: boolean);\n}\n\nnamespace curve {\n    var proto: CanvasRenderingContext2D = CanvasRenderingContext2D.prototype;\n    if (!proto.ellipse) {\n        proto.ellipse = function (x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, antiClockwise?: boolean) {\n            this.save();\n            this.translate(x, y);\n            this.rotate(rotation);\n            this.scale(radiusX, radiusY);\n            this.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\n            this.restore();\n        }\n    }\n}\n","namespace curve {\n    var proto: CanvasRenderingContext2D = CanvasRenderingContext2D.prototype;\n    if (!proto.setFillRule) {\n        proto.setFillRule = function (arg: FillRule) {\n            this.fillRule = arg;\n        };\n    }\n}","interface TextEncoder {\n    encode(str: string): Uint8Array;\n    encoding: string;\n}\ndeclare var TextEncoder: {\n    prototype: TextEncoder;\n    new(): TextEncoder;\n};\n\n(function (global: any) {\n    if (typeof global.TextEncoder === \"function\")\n        return;\n\n    global.TextEncoder = class TextEncoder {\n        constructor() {\n            Object.defineProperties(this, {\n                \"encoding\": {value: \"utf-8\", writable: false}\n            });\n        }\n\n        encode(str: string): Uint8Array {\n            var buf = new ArrayBuffer(str.length);\n            var arr = new Uint8Array(buf);\n            for (var i = 0; i < arr.length; i++) {\n                arr[i] = str.charCodeAt(i);\n            }\n            return arr;\n        }\n    };\n})(this);","namespace curve {\n    export function serialize(path: Path, pretty?: boolean) {\n        var serializer = new Serializer(pretty);\n        path.exec(serializer);\n        return serializer.data;\n    }\n\n    class Serializer implements ISegmentRunner {\n        private prev: {x:number;y:number;};\n        private pretty: boolean;\n        data: string = \"\";\n\n        constructor(pretty?: boolean) {\n            this.pretty = pretty === true;\n        }\n\n        setFillRule(fillRule: FillRule) {\n            this.prepend().data += `F${fillRule}`;\n        }\n\n        closePath() {\n            this.prepend().data += \"Z\";\n        }\n\n        moveTo(x: number, y: number) {\n            if (this.pretty) {\n                x = round(x, 2);\n                y = round(y, 2);\n            }\n            this.prepend().data += `M${x},${y}`;\n            this.prev = {x: x, y: y};\n        }\n\n        lineTo(x: number, y: number) {\n            if (this.pretty) {\n                x = round(x, 2);\n                y = round(y, 2);\n            }\n            this.prepend().data += `L${x},${y}`;\n            this.prev = {x: x, y: y};\n        }\n\n        bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number) {\n            if (this.pretty) {\n                cp1x = round(cp1x, 2);\n                cp1y = round(cp1y, 2);\n                cp2x = round(cp2x, 2);\n                cp2y = round(cp2y, 2);\n                x = round(x, 2);\n                y = round(y, 2);\n            }\n            this.prepend().data += `C${cp1x},${cp1y},${cp2x},${cp2y},${x},${y}`;\n            this.prev = {x: x, y: y};\n        }\n\n        quadraticCurveTo(cpx: number, cpy: number, x: number, y: number) {\n            if (this.pretty) {\n                cpx = round(cpx, 2);\n                cpy = round(cpy, 2);\n                x = round(x, 2);\n                y = round(y, 2);\n            }\n            this.prepend().data += `Q${cpx},${cpy},${x},${y}`;\n            this.prev = {x: x, y: y};\n        }\n\n        arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean) {\n            // Not represented in svg\n        }\n\n        arcTo(x1: number, y1: number, x2: number, y2: number, radius: number) {\n            // Not represented in svg\n        }\n\n        ellipse(cx: number, cy: number, rx: number, ry: number, rotation: number, startAngle: number, endAngle: number, antiClockwise?: boolean) {\n            var earc = ellipticalArc.fromEllipse(cx, cy, rx, ry, rotation, startAngle, endAngle, antiClockwise);\n            earc.phi = earc.phi * 180 / Math.PI;\n            if (this.pretty) {\n                earc.sx = round(earc.sx, 2);\n                earc.sy = round(earc.sy, 2);\n                earc.rx = round(earc.rx, 2);\n                earc.ry = round(earc.ry, 2);\n                earc.phi = round(earc.phi, 2);\n                earc.ex = round(earc.ex, 2);\n                earc.ey = round(earc.ey, 2);\n            }\n            if (this.prev && close(this.prev.x, earc.sx) && close(this.prev.y, earc.sy))\n                this.prepend().data += `A${earc.rx},${earc.ry} ${earc.phi} ${earc.fa} ${earc.fs} ${earc.ex},${earc.ey}`;\n            else\n                this.prepend().data += `L${earc.sx},${earc.sy} A${earc.rx},${earc.ry} ${earc.phi} ${earc.fa} ${earc.fs} ${earc.ex},${earc.ey}`;\n        }\n\n        private prepend(): this {\n            if (this.data)\n                this.data += \" \";\n            return this;\n        }\n    }\n\n    var EPSILON = 1e-4;\n\n    function close(a: number, b: number): boolean {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    function round(a: number, digits: number): number {\n        var factor = Math.pow(10, digits);\n        return Math.round(a * factor) / factor;\n    }\n}"],"sourceRoot":"./src"}